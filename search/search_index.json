{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Cognix","text":"<p>Note: This is not an officially supported Replicate product.</p> <p>Build cog images deterministically using Nix.</p> <p>Nix is a tool that make it easy to build packages based on the instructions you give it using a domain-specific language. Cognix is a software toolkit that makes it easy to build cog images using Nix.</p> <p>Cognix glues together 3 parts: - nixpkgs dockerTools, used to create docker images using Nix - dream2nix, which is used to declaratively create python environments with Nix. - cog, wrapping the python code inside your docker image.</p> <p>These things are packaged into one program with a simple interface.</p>"},{"location":"#example-examplestorch-demodefaultnix","title":"Example (./examples/torch-demo/default.nix):","text":"<pre><code># build the image and load it into docker\n$ nix build github:yorickvp/cognix#torch-demo &amp;&amp; ./result load\n\n$ cog predict torch-demo:......\n\nStarting Docker image torch-demo:.... and running setup()...\nRunning prediction...\ncuda works!\n\n$ docker image ls torch-demo:....\nREPOSITORY   TAG                                IMAGE ID       CREATED        SIZE\ntorch-demo   c209d6h86w7j7ksnjks4rkynjfw3ahwb   8fe343a42975   53 years ago   4.7GB\n\n# explore the contribution of various packages to the image size\n# format: store-path                                                           own-size  size-with-deps\n$ nix path-info ./result -rSsh | sort -hk3\n[..]\n/nix/store/rbrw4jb0bz54kznbwwf47lj7k77jg00j-python3.10-nvidia-cudnn-cu11-8.5.0.96        868.8M    1.4G\n/nix/store/qqrzrbsgzk3bbg1pfficq5l2qnyz2b2k-python3.10-torch-2.0.1                         1.3G    4.3G\n</code></pre>"},{"location":"#example-examplesebsynth-cpudefaultnix","title":"Example (./examples/ebsynth-cpu/default.nix):","text":"<pre><code>$ git clone ...\n$ nix build .#ebsynth-cpu &amp;&amp; ./result load\n$ cog predict ebsynth-cpu:...... -i style=@...\n</code></pre>"},{"location":"#why","title":"Why?","text":"<ul> <li>Smaller images, they only contain the packages needed at runtime.</li> <li>Determinism! Building an image twice on different machines should give you the exact same image, even after years.</li> <li>Completeness: The dependencies for an image are fully specified, so there are no build steps you don't know about.</li> <li>Better, granular caching: Nix generates a docker image with a layer for every dependency (up to ~limit, then it starts merging cleverly), images sharing dependencies will share layers as well.</li> </ul>"},{"location":"#checklist","title":"Checklist","text":"<ul> <li> GPU support</li> <li> Automatically parsing cog.yaml</li> <li> Auto-resolving torch/cuda versions</li> <li> Better ergonomics: module system</li> <li> Fully sort out cog/r8 compat</li> <li> Other python versions than 3.10</li> <li> System dependencies mapping</li> <li> <code>cog.yaml</code> run commands</li> <li> Support upgrading <code>cog</code> at runtime</li> <li> Downloading weights at build-time (example(./examples/gte-small/cog.yaml))</li> <li> Uploading weights to gcs bucket (<code>nix run .#gte-large.push-weights</code>)</li> <li> Downloading weights at run-time (example(./examples/gte-large))</li> <li> Generating openapi.yaml during the build</li> <li> Automatically download weights at run-time</li> <li> Ergonomic interface</li> </ul>"},{"location":"reference/buildPythonPackage/","title":"buildPythonPackage","text":"state: released maintainers: @DavHau"},{"location":"reference/buildPythonPackage/#introduction","title":"Introduction","text":""},{"location":"reference/buildPythonPackage/#options","title":"Options","text":""},{"location":"reference/buildPythonPackage/#buildpythonpackage","title":"buildPythonPackage","text":""},{"location":"reference/buildPythonPackage/#buildpythonpackagebuild-system","title":"buildPythonPackage.build-system","text":"<p>Build-time only Python dependencies. Items listed in <code>build-system.requires</code>/<code>setup_requires</code>.</p> type list of (string or path or package)  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/buildPythonPackage/#buildpythonpackagecatchconflicts","title":"buildPythonPackage.catchConflicts","text":"<p>Raise an error if two packages are installed with the same name TODO: For cross we probably need a different PYTHONPATH, or not add the runtime deps until after buildPhase.</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>''\n  true if the host and build platforms are the same, false otherwise.\n''\n</pre>"},{"location":"reference/buildPythonPackage/#buildpythonpackagedependencies","title":"buildPythonPackage.dependencies","text":"<p>List of runtime python dependencies. Aside from propagating dependencies, <code>buildPythonPackage</code> also injects code into and wraps executables with the paths included in this list. Items listed in <code>install_requires</code> go here.</p> type list of (string or path or package)  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/buildPythonPackage/#buildpythonpackagedisabled","title":"buildPythonPackage.disabled","text":"<p>used to disable derivation, useful for specific python versions</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>false\n</pre>"},{"location":"reference/buildPythonPackage/#buildpythonpackagedisabledtestpaths","title":"buildPythonPackage.disabledTestPaths","text":"<p>Test paths to ignore in checkPhase</p> type list of anything  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/buildPythonPackage/#buildpythonpackagedisabledtests","title":"buildPythonPackage.disabledTests","text":"<p>Disable running specific unit tests</p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/buildPythonPackage/#buildpythonpackagedontusepipinstall","title":"buildPythonPackage.dontUsePipInstall","text":"<p>Don't use Pip to install a wheel Note this is actually a variable for the pipInstallPhase in pip's setupHook. It's included here to prevent an infinite recursion.</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>false\n</pre>"},{"location":"reference/buildPythonPackage/#buildpythonpackagedontwrappythonprograms","title":"buildPythonPackage.dontWrapPythonPrograms","text":"<p>Skip wrapping of python programs altogether</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>false\n</pre>"},{"location":"reference/buildPythonPackage/#buildpythonpackageformat","title":"buildPythonPackage.format","text":"<p>Several package formats are supported:   <code>null</code>: Disable this legacy option and use the new <code>pyproject</code> option instead.   \"setuptools\" : Install a common setuptools/distutils based package. This builds a wheel.   \"wheel\" : Install from a pre-compiled wheel.   \"flit\" : Install a flit package. This builds a wheel.   \"pyproject\": Install a package using a <code>pyproject.toml</code> file (PEP517). This builds a wheel.   \"egg\": Install a package from an egg.   \"other\" : Provide your own buildPhase and installPhase.</p> type null or string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>\"setuptools\"\n</pre>"},{"location":"reference/buildPythonPackage/#buildpythonpackagemakewrapperargs","title":"buildPythonPackage.makeWrapperArgs","text":"<p>Additional arguments to pass to the makeWrapper function, which wraps generated binaries.</p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/buildPythonPackage/#buildpythonpackageoptional-dependencies","title":"buildPythonPackage.optional-dependencies","text":"<p>Optional feature flagged dependencies. Items listed in <code>extras_requires</code> go here.</p> type attribute set of (string or path or package)  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/buildPythonPackage/#buildpythonpackagepermitusersite","title":"buildPythonPackage.permitUserSite","text":"<p>Skip setting the PYTHONNOUSERSITE environment variable in wrapped programs</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>false\n</pre>"},{"location":"reference/buildPythonPackage/#buildpythonpackagepipinstallflags","title":"buildPythonPackage.pipInstallFlags","text":"<p>Extra flags passed to <code>pip install</code></p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/buildPythonPackage/#buildpythonpackagepyproject","title":"buildPythonPackage.pyproject","text":"<p>Whether the pyproject format should be used. When set to <code>true</code>, <code>pypaBuildHook</code> will be used, and you can add the required build dependencies from <code>build-system.requires</code> to <code>build-system</code>.</p> <p>Note that the pyproject format falls back to using <code>setuptools</code>, so you can use <code>pyproject = true</code> even if the package only has a <code>setup.py</code>. When set to <code>false</code>, you can use the existing hooks or provide your own logic to build the package. This can be useful for packages that don't support the pyproject format.</p> <p>When unset, the legacy <code>setuptools</code> hooks are used for backwards compatibility.</p> type null or boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#buildpythonpackagepytestflagsarray","title":"buildPythonPackage.pytestFlagsArray","text":"<p>Extra flags passed to pytest</p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/buildPythonPackage/#buildpythonpackagepythonimportscheck","title":"buildPythonPackage.pythonImportsCheck","text":"<p>Check whether importing the listed modules works</p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/buildPythonPackage/#buildpythonpackageremovebinbytecode","title":"buildPythonPackage.removeBinBytecode","text":"<p>Remove bytecode from bin folder. When a Python script has the extension <code>.py</code>, bytecode is generated Typically, executables in bin have no extension, so no bytecode is generated. However, some packages do provide executables with extensions, and thus bytecode is generated.</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>true\n</pre>"},{"location":"reference/buildPythonPackage/#env","title":"env","text":"<p>environment variables passed to the build environment</p> type attribute set of (null or boolean or signed integer or string or path or package or list of (boolean or signed integer or string or path or package))  source dream2nix/modules/dream2nix/core/env default <pre>{ }\n</pre>"},{"location":"reference/buildPythonPackage/#name","title":"name","text":"<p>The name of the package</p> type string  source dream2nix/modules/dream2nix/core/ui/interface.nix"},{"location":"reference/buildPythonPackage/#public","title":"public","text":"<p>The final result of the evaluated package. Contains everything that nix expects from a derivation. Contains fields like name, outputs, drvPath, outPath, etc. Can be build with nix-build or <code>nix build</code>.</p> type lazy attribute set of anything  source dream2nix/modules/dream2nix/core/public/interface.nix"},{"location":"reference/buildPythonPackage/#version","title":"version","text":"<p>The version of the package</p> type string  source dream2nix/modules/dream2nix/core/ui/interface.nix"},{"location":"reference/buildPythonPackage/#deps","title":"deps","text":"<p>All dependencies of the package. This option should be set by the \"outer world\" and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p> <p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable. Nothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p> <p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p> type lazy attribute set of raw value  source dream2nix/modules/dream2nix/mkDerivation/interface.nix, dream2nix/modules/dream2nix/core/deps, dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>{ }\n</pre> example <pre>{nixpkgs, ...}: {\n  inherit (nixpkgs) stdenv;\n  inherit (nixpkgs.haskellPackages) pandoc;\n}\n</pre>"},{"location":"reference/buildPythonPackage/#depspython","title":"deps.python","text":"<p>The python interpreter package to use</p> type package  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix"},{"location":"reference/buildPythonPackage/#depsstdenv","title":"deps.stdenv","text":"<p>The stdenv used for building this package</p> type raw value  source dream2nix/modules/dream2nix/mkDerivation/interface.nix"},{"location":"reference/buildPythonPackage/#mkderivation","title":"mkDerivation","text":""},{"location":"reference/buildPythonPackage/#mkderivation__contentaddressed","title":"mkDerivation.__contentAddressed","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivation__darwinallowlocalnetworking","title":"mkDerivation.__darwinAllowLocalNetworking","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivation__impurehostdeps","title":"mkDerivation.__impureHostDeps","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivation__propagatedimpurehostdeps","title":"mkDerivation.__propagatedImpureHostDeps","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivation__structuredattrs","title":"mkDerivation.__structuredAttrs","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationallowsubstitutes","title":"mkDerivation.allowSubstitutes","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationallowedreferences","title":"mkDerivation.allowedReferences","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationallowedrequisites","title":"mkDerivation.allowedRequisites","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationargs","title":"mkDerivation.args","text":"type null or (list of (string or path))  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationbuildflags","title":"mkDerivation.buildFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationbuildinputs","title":"mkDerivation.buildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationbuildphase","title":"mkDerivation.buildPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationbuilder","title":"mkDerivation.builder","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationcheckflags","title":"mkDerivation.checkFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationcheckinputs","title":"mkDerivation.checkInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationcheckphase","title":"mkDerivation.checkPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationchecktarget","title":"mkDerivation.checkTarget","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationcmakeflags","title":"mkDerivation.cmakeFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationconfigureflags","title":"mkDerivation.configureFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationconfigurephase","title":"mkDerivation.configurePhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationconfigureplatforms","title":"mkDerivation.configurePlatforms","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationconfigurescript","title":"mkDerivation.configureScript","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdepsbuildbuild","title":"mkDerivation.depsBuildBuild","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdepsbuildbuildpropagated","title":"mkDerivation.depsBuildBuildPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdepsbuildtarget","title":"mkDerivation.depsBuildTarget","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdepsbuildtargetpropagated","title":"mkDerivation.depsBuildTargetPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdepshosthost","title":"mkDerivation.depsHostHost","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdepshosthostpropagated","title":"mkDerivation.depsHostHostPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdepstargettarget","title":"mkDerivation.depsTargetTarget","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdepstargettargetpropagated","title":"mkDerivation.depsTargetTargetPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdisallowedreferences","title":"mkDerivation.disallowedReferences","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdisallowedrequisites","title":"mkDerivation.disallowedRequisites","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdistflags","title":"mkDerivation.distFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdistphase","title":"mkDerivation.distPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdisttarget","title":"mkDerivation.distTarget","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdocheck","title":"mkDerivation.doCheck","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdodist","title":"mkDerivation.doDist","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdoinstallcheck","title":"mkDerivation.doInstallCheck","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontadddisabledeptrack","title":"mkDerivation.dontAddDisableDepTrack","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontaddprefix","title":"mkDerivation.dontAddPrefix","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontaddstaticconfigureflags","title":"mkDerivation.dontAddStaticConfigureFlags","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontbuild","title":"mkDerivation.dontBuild","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontconfigure","title":"mkDerivation.dontConfigure","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontcopydist","title":"mkDerivation.dontCopyDist","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontdisablestatic","title":"mkDerivation.dontDisableStatic","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontfixlibtool","title":"mkDerivation.dontFixLibtool","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontfixup","title":"mkDerivation.dontFixup","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontinstall","title":"mkDerivation.dontInstall","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontmakesourceswritable","title":"mkDerivation.dontMakeSourcesWritable","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontmovebin","title":"mkDerivation.dontMoveBin","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontpatch","title":"mkDerivation.dontPatch","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontpatchelf","title":"mkDerivation.dontPatchELF","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontpatchshebangs","title":"mkDerivation.dontPatchShebangs","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontprunelibtoolfiles","title":"mkDerivation.dontPruneLibtoolFiles","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontstrip","title":"mkDerivation.dontStrip","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontstriphost","title":"mkDerivation.dontStripHost","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontstriptarget","title":"mkDerivation.dontStripTarget","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationdontunpack","title":"mkDerivation.dontUnpack","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationenableparallelbuilding","title":"mkDerivation.enableParallelBuilding","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationenableparallelchecking","title":"mkDerivation.enableParallelChecking","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationexportreferencegraph","title":"mkDerivation.exportReferenceGraph","text":"type null or (list of (string or package))  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationfixupphase","title":"mkDerivation.fixupPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationforceshare","title":"mkDerivation.forceShare","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationhardeningdisable","title":"mkDerivation.hardeningDisable","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationhardeningenable","title":"mkDerivation.hardeningEnable","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationimpureenvvars","title":"mkDerivation.impureEnvVars","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationinstallcheckflags","title":"mkDerivation.installCheckFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationinstallcheckinputs","title":"mkDerivation.installCheckInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationinstallcheckphase","title":"mkDerivation.installCheckPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationinstallchecktarget","title":"mkDerivation.installCheckTarget","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationinstallflags","title":"mkDerivation.installFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationinstallphase","title":"mkDerivation.installPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationinstalltargets","title":"mkDerivation.installTargets","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationmakeflags","title":"mkDerivation.makeFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationmakefile","title":"mkDerivation.makefile","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationmesonflags","title":"mkDerivation.mesonFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationmeta","title":"mkDerivation.meta","text":"type null or (attribute set)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationnativebuildinputs","title":"mkDerivation.nativeBuildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationnativecheckinputs","title":"mkDerivation.nativeCheckInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationoutputhash","title":"mkDerivation.outputHash","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationoutputhashalgo","title":"mkDerivation.outputHashAlgo","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationoutputhashmode","title":"mkDerivation.outputHashMode","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationoutputs","title":"mkDerivation.outputs","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>[\n  \"out\"\n]\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpassasfile","title":"mkDerivation.passAsFile","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpassthru","title":"mkDerivation.passthru","text":"type null or (attribute set)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpatchflags","title":"mkDerivation.patchFlags","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpatchphase","title":"mkDerivation.patchPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpatches","title":"mkDerivation.patches","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationphases","title":"mkDerivation.phases","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpos","title":"mkDerivation.pos","text":"type null or (attribute set)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpostbuild","title":"mkDerivation.postBuild","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpostcheck","title":"mkDerivation.postCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpostconfigure","title":"mkDerivation.postConfigure","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpostdist","title":"mkDerivation.postDist","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpostfixup","title":"mkDerivation.postFixup","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpostinstalcheck","title":"mkDerivation.postInstalCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpostinstall","title":"mkDerivation.postInstall","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpostpatch","title":"mkDerivation.postPatch","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpostphases","title":"mkDerivation.postPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpostunpack","title":"mkDerivation.postUnpack","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationprebuild","title":"mkDerivation.preBuild","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationprebuildphases","title":"mkDerivation.preBuildPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationprecheck","title":"mkDerivation.preCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpreconfigure","title":"mkDerivation.preConfigure","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpreconfigurephases","title":"mkDerivation.preConfigurePhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpredist","title":"mkDerivation.preDist","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpredistphases","title":"mkDerivation.preDistPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationprefixup","title":"mkDerivation.preFixup","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationprefixupphases","title":"mkDerivation.preFixupPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpreinstall","title":"mkDerivation.preInstall","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpreinstallcheck","title":"mkDerivation.preInstallCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpreinstallphases","title":"mkDerivation.preInstallPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationprepatch","title":"mkDerivation.prePatch","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationprephases","title":"mkDerivation.prePhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpreunpack","title":"mkDerivation.preUnpack","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpreferlocalbuild","title":"mkDerivation.preferLocalBuild","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationprefix","title":"mkDerivation.prefix","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationprefixkey","title":"mkDerivation.prefixKey","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpropagatedbuildinputs","title":"mkDerivation.propagatedBuildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpropagatednativebuildinputs","title":"mkDerivation.propagatedNativeBuildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationpropagatedsandboxprofile","title":"mkDerivation.propagatedSandboxProfile","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationrealbuilder","title":"mkDerivation.realBuilder","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationrequiredsystemfeatures","title":"mkDerivation.requiredSystemFeatures","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationsandboxprofile","title":"mkDerivation.sandboxProfile","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationseparatedebuginfo","title":"mkDerivation.separateDebugInfo","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationsetsourceroot","title":"mkDerivation.setSourceRoot","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationsetuphook","title":"mkDerivation.setupHook","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationshellhook","title":"mkDerivation.shellHook","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationsourceroot","title":"mkDerivation.sourceRoot","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationsrc","title":"mkDerivation.src","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationsrcs","title":"mkDerivation.srcs","text":"type null or (list of (string or path or package))  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationstrictdeps","title":"mkDerivation.strictDeps","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationstripallflags","title":"mkDerivation.stripAllFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationstripalllist","title":"mkDerivation.stripAllList","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationstripdebugflags","title":"mkDerivation.stripDebugFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationstripdebuglist","title":"mkDerivation.stripDebugList","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationtarballs","title":"mkDerivation.tarballs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationunpackcmd","title":"mkDerivation.unpackCmd","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationunpackphase","title":"mkDerivation.unpackPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/buildPythonPackage/#mkderivationversion","title":"mkDerivation.version","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/builtins-derivation/","title":"builtins-derivation","text":"state: released maintainers: @DavHau"},{"location":"reference/builtins-derivation/#introduction","title":"Introduction","text":""},{"location":"reference/builtins-derivation/#options","title":"Options","text":""},{"location":"reference/builtins-derivation/#builtins-derivation","title":"builtins-derivation","text":""},{"location":"reference/builtins-derivation/#builtins-derivation__contentaddressed","title":"builtins-derivation.__contentAddressed","text":"type null or boolean  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/builtins-derivation/#builtins-derivation__structuredattrs","title":"builtins-derivation.__structuredAttrs","text":"type null or boolean  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/builtins-derivation/#builtins-derivationallowsubstitutes","title":"builtins-derivation.allowSubstitutes","text":"type null or boolean  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/builtins-derivation/#builtins-derivationallowedreferences","title":"builtins-derivation.allowedReferences","text":"type null or (list of string)  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/builtins-derivation/#builtins-derivationallowedrequisites","title":"builtins-derivation.allowedRequisites","text":"type null or (list of string)  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/builtins-derivation/#builtins-derivationargs","title":"builtins-derivation.args","text":"type null or (list of (string or path))  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/builtins-derivation/#builtins-derivationbuilder","title":"builtins-derivation.builder","text":"type string or path or package  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix"},{"location":"reference/builtins-derivation/#builtins-derivationdisallowedreferences","title":"builtins-derivation.disallowedReferences","text":"type null or (list of string)  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/builtins-derivation/#builtins-derivationdisallowedrequisites","title":"builtins-derivation.disallowedRequisites","text":"type null or (list of string)  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/builtins-derivation/#builtins-derivationexportreferencegraph","title":"builtins-derivation.exportReferenceGraph","text":"type null or (list of (string or package))  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/builtins-derivation/#builtins-derivationimpureenvvars","title":"builtins-derivation.impureEnvVars","text":"type null or (list of string)  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/builtins-derivation/#builtins-derivationoutputhash","title":"builtins-derivation.outputHash","text":"type null or string  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/builtins-derivation/#builtins-derivationoutputhashalgo","title":"builtins-derivation.outputHashAlgo","text":"type null or string  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/builtins-derivation/#builtins-derivationoutputhashmode","title":"builtins-derivation.outputHashMode","text":"type null or string  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/builtins-derivation/#builtins-derivationoutputs","title":"builtins-derivation.outputs","text":"type null or (list of string)  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix default <pre>[\n  \"out\"\n]\n</pre>"},{"location":"reference/builtins-derivation/#builtins-derivationpassasfile","title":"builtins-derivation.passAsFile","text":"type null or (list of string)  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/builtins-derivation/#builtins-derivationpreferlocalbuild","title":"builtins-derivation.preferLocalBuild","text":"type null or (list of string)  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/builtins-derivation/#builtins-derivationsystem","title":"builtins-derivation.system","text":"type string  source dream2nix/modules/dream2nix/builtins-derivation/interface.nix"},{"location":"reference/builtins-derivation/#deps","title":"deps","text":"<p>All dependencies of the package. This option should be set by the \"outer world\" and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p> <p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable. Nothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p> <p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p> type lazy attribute set of raw value  source dream2nix/modules/dream2nix/core/deps default <pre>{ }\n</pre> example <pre>{nixpkgs, ...}: {\n  inherit (nixpkgs) stdenv;\n  inherit (nixpkgs.haskellPackages) pandoc;\n}\n</pre>"},{"location":"reference/builtins-derivation/#env","title":"env","text":"<p>environment variables passed to the build environment</p> type attribute set of (null or boolean or signed integer or string or path or package or list of (boolean or signed integer or string or path or package))  source dream2nix/modules/dream2nix/core/env default <pre>{ }\n</pre>"},{"location":"reference/builtins-derivation/#name","title":"name","text":"<p>The name of the package</p> type string  source dream2nix/modules/dream2nix/core/ui/interface.nix"},{"location":"reference/builtins-derivation/#version","title":"version","text":"<p>The version of the package</p> type string  source dream2nix/modules/dream2nix/core/ui/interface.nix"},{"location":"reference/builtins-derivation/#lock","title":"lock","text":""},{"location":"reference/builtins-derivation/#lockcontent","title":"lock.content","text":"<p>The content of the lock file. All fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p> type anything  source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/builtins-derivation/#lockextrascripts","title":"lock.extraScripts","text":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p> <p>This allows adding custom logic to the lock file generation.</p> type list of path  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/builtins-derivation/#lockfields","title":"lock.fields","text":"<p>Fields of the lock file</p> type attribute set of (submodule)  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>{ }\n</pre> example <pre>{\n  pname = true;\n  version = true;\n}\n</pre>"},{"location":"reference/builtins-derivation/#name_1","title":"&lt;name&gt;","text":""},{"location":"reference/builtins-derivation/#lockfieldsnamedefault","title":"lock.fields.&lt;name&gt;.default","text":"<p>The default value in case the lock file doesn't exist or doesn't yet contain the field.</p> type null or anything  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>null\n</pre>"},{"location":"reference/builtins-derivation/#lockfieldsnamescript","title":"lock.fields.&lt;name&gt;.script","text":"<p>A script to refresh the value of this lock file field. The script should write the result as json file to $out.</p> type path  source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/builtins-derivation/#lockinvalidationdata","title":"lock.invalidationData","text":"<p>Pass any data that should invalidate the lock file when changed. This is useful for example when the lock file should be regenerated when the requirements change.</p> type anything  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>{ }\n</pre> example <pre>{\n  pip = {\n    lockVersion = \"2\";\n    requirements = [\n      \"requests\"\n      \"pillow\"\n    ];\n  };\n}\n</pre>"},{"location":"reference/builtins-derivation/#lib","title":"lib","text":""},{"location":"reference/builtins-derivation/#locklibcomputefodhash","title":"lock.lib.computeFODHash","text":"<p>Helper function to write the hash of a given FOD to $out.</p> type function that evaluates to a(n) path (read only) source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/builtins-derivation/#lockrefresh","title":"lock.refresh","text":"<p>Script to refresh the lock file</p> type package (read only) source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/builtins-derivation/#paths","title":"paths","text":""},{"location":"reference/builtins-derivation/#pathscachefile","title":"paths.cacheFile","text":"<p>Path to the eval cache file of the current package. Relative to \"${paths.projectRoot}/${paths.package}\"\".</p> type string  source dream2nix/modules/dream2nix/core/paths/interface.nix default <pre>\"cache.json\"\n</pre>"},{"location":"reference/builtins-derivation/#pathslockfile","title":"paths.lockFile","text":"<p>Path to the lock file of the current package. Relative to \"${paths.projectRoot}/${paths.package}\"\".</p> type string  source dream2nix/modules/dream2nix/core/paths/interface.nix default <pre>\"lock.json\"\n</pre>"},{"location":"reference/builtins-derivation/#pathspackage","title":"paths.package","text":"<p>Path to the directory containing the definition of the current package. Relative to 'paths.projectRoot'.</p> <p>This helps locating package definitions for lock &amp; update scripts.</p> type path or string  source dream2nix/modules/dream2nix/core/paths/interface.nix"},{"location":"reference/builtins-derivation/#pathsprojectroot","title":"paths.projectRoot","text":"<p>Path to the root of the project on which dream2nix operates. Must contain the marker file specified by 'paths.projectRootFile'</p> <p>This helps locating lock files at evaluation time.</p> type path  source dream2nix/modules/dream2nix/core/paths/interface.nix example <pre>./.\n</pre>"},{"location":"reference/builtins-derivation/#pathsprojectrootfile","title":"paths.projectRootFile","text":"<p>File name to look for to determine the root of the project. Ensure 'paths.projectRoot' contains a file named like this.</p> <p>This helps locating package definitions for lock &amp; update scripts.</p> type string  source dream2nix/modules/dream2nix/core/paths/interface.nix default <pre>\".git\"\n</pre> example <pre>\".git\"\n</pre>"},{"location":"reference/builtins-derivation/#public","title":"public","text":"<p>The final result of the evaluated package. Contains everything that nix expects from a derivation. Contains fields like name, outputs, drvPath, outPath, etc. Can be build with nix-build or <code>nix build</code>.</p> type lazy attribute set of anything  source dream2nix/modules/dream2nix/core/public/interface.nix, dream2nix/modules/dream2nix/core/docs"},{"location":"reference/builtins-derivation/#publicdocs","title":"public.docs","text":"<p>The manual of the package as a website</p> type package (read only) source dream2nix/modules/dream2nix/core/docs"},{"location":"reference/cognix/","title":"cognix","text":"state: released maintainers: @YorickvP"},{"location":"reference/cognix/#introduction","title":"Introduction","text":""},{"location":"reference/cognix/#options","title":"Options","text":""},{"location":"reference/cognix/#cognix","title":"cognix","text":""},{"location":"reference/cognix/#cognixaddcudalibrarypath","title":"cognix.addCudaLibraryPath","text":"<p>Whether to add the CUDA paths from docker-nvidia to LD_LIBRARY_PATH. Disable to sanity check your dependencies.</p> type boolean  source cognix/modules/cog/interface.nix default <pre>true\n</pre>"},{"location":"reference/cognix/#cognixcudapackages","title":"cognix.cudaPackages","text":"<p>Exposes cuda packages for your convenience</p> type attribute set of package  source cognix/modules/cog/interface.nix"},{"location":"reference/cognix/#cognixenvironment","title":"cognix.environment","text":"<p>Set these environment variables in the image.</p> type attribute set of anything  source cognix/modules/cog/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/cognix/#cognixfake_pip","title":"cognix.fake_pip","text":"<p>Install a fake pip wrapper that does nothing.</p> <p>This is useful because replicate calls <code>pip install cog==...</code> before starting your image, which you may not want when using a patched version of cog's python library.</p> type boolean  source cognix/modules/cog/interface.nix default <pre>false\n</pre>"},{"location":"reference/cognix/#cognixincludenix","title":"cognix.includeNix","text":"<p>Whether to add Nix to the image so it can be used to install more packages at run-time. This also sets the NIX_PATH so nixpkgs points to the nixpkgs used in cognix.</p> type boolean  source cognix/modules/cog/nix.nix default <pre>false\n</pre>"},{"location":"reference/cognix/#merge-native","title":"merge-native","text":""},{"location":"reference/cognix/#cognixmerge-nativecublas","title":"cognix.merge-native.cublas","text":"<p>Override the binaries in nvidia-cublas-cu12 with the system-provided cublas binaries. Useful to save space when mixing python binary dependencies with compiled dependencies. Specify <code>force</code> to ignore version mismatches.</p> type one of false, true, \"force\"  source cognix/modules/cog/interface.nix default <pre>false\n</pre>"},{"location":"reference/cognix/#cognixmerge-nativecudnn","title":"cognix.merge-native.cudnn","text":"<p>Override the binaries in nvidia-cudnn-cu12 with the system-provided cublas binaries. Useful to save space when mixing python binary dependencies with compiled dependencies. Specify <code>force</code> to ignore version mismatches.</p> type one of false, true, \"force\"  source cognix/modules/cog/interface.nix default <pre>false\n</pre>"},{"location":"reference/cognix/#nix","title":"nix","text":""},{"location":"reference/cognix/#cognixnixextraoptions","title":"cognix.nix.extraOptions","text":"<p>Additional text appended to {file}<code>nix.conf</code> inside the image, when includeNix = true.</p> type strings concatenated with \"\\n\"  source cognix/modules/cog/nix.nix default <pre>\"\"\n</pre> example <pre>''\n  cores = 4\n''\n</pre>"},{"location":"reference/cognix/#cognixopenapi_schema","title":"cognix.openapi_schema","text":"<p>Specify a path to openapi.json added to the image. Defaults to the spec generated using python -m cog.command.openapi_schema.</p> type path  source cognix/modules/cog/interface.nix"},{"location":"reference/cognix/#cognixpostcopycommands","title":"cognix.postCopyCommands","text":"<p>Commands to run after gathering all the files for the container /src dir</p> type strings concatenated with \"\\n\"  source cognix/modules/cog/interface.nix default <pre>\"\"\n</pre> example <pre>''\n  touch $out/src/.env\n''\n</pre>"},{"location":"reference/cognix/#cognixpython_root_packages","title":"cognix.python_root_packages","text":"<p>Only include the dependencies of these python packages in the final image. This allows you to build multiple images with the same <code>lock.json</code>, containing different subsets of python packages.</p> type null or (list of string)  source cognix/modules/cog/interface.nix default <pre>null\n</pre> example <pre>[\n  \"nvidia-pytriton\"\n  \"transformers\"\n  \"tokenizers\"\n]\n</pre>"},{"location":"reference/cognix/#cognixrootpath","title":"cognix.rootPath","text":"<p>Path containing cog.yaml, predict.py, .dockerignore</p> type string  source cognix/modules/cog/interface.nix"},{"location":"reference/cognix/#cognixsourceignores","title":"cognix.sourceIgnores","text":"<p>gitignore syntax, don't copy these files to the /src package in the image</p> type strings concatenated with \"\\n\"  source cognix/modules/cog/interface.nix default <pre>\"\"\n</pre> example <pre>''\n  /models/*\n''\n</pre>"},{"location":"reference/cognix/#cognixsystempackages","title":"cognix.systemPackages","text":"<p>Packages to make available for <code>cog.build.system_packages</code>.</p> type attribute set of package  source cognix/modules/cog/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/cognix/#deps","title":"deps","text":"<p>All dependencies of the package. This option should be set by the \"outer world\" and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p> <p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable. Nothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p> <p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p> type lazy attribute set of raw value  source dream2nix/modules/dream2nix/core/deps default <pre>{ }\n</pre> example <pre>{nixpkgs, ...}: {\n  inherit (nixpkgs) stdenv;\n  inherit (nixpkgs.haskellPackages) pandoc;\n}\n</pre>"},{"location":"reference/cognix/#env","title":"env","text":"<p>environment variables passed to the build environment</p> type attribute set of (null or boolean or signed integer or string or path or package or list of (boolean or signed integer or string or path or package))  source dream2nix/modules/dream2nix/core/env default <pre>{ }\n</pre>"},{"location":"reference/cognix/#name","title":"name","text":"<p>The name of the package</p> type string  source dream2nix/modules/dream2nix/core/ui/interface.nix"},{"location":"reference/cognix/#version","title":"version","text":"<p>The version of the package</p> type string  source dream2nix/modules/dream2nix/core/ui/interface.nix"},{"location":"reference/cognix/#cog","title":"cog","text":""},{"location":"reference/cognix/#build","title":"build","text":""},{"location":"reference/cognix/#cogbuildcog_version","title":"cog.build.cog_version","text":"<p>The cog-python version to add to the image.</p> type string  source cognix/modules/cog/interface.nix default <pre>\"0.9.12\"\n</pre>"},{"location":"reference/cognix/#cogbuildcuda","title":"cog.build.cuda","text":"type one of , \"11.0\", \"11.1\", \"11.3\", \"11.5\", \"11.6\", \"11.7\", \"11.8\", \"12.1\", \"12.2\", \"12.3\", \"12.4\"  source cognix/modules/cog/interface.nix"},{"location":"reference/cognix/#cogbuildgpu","title":"cog.build.gpu","text":"<p>Whether to enable GPU support.</p> type boolean  source cognix/modules/cog/interface.nix default <pre>false\n</pre> example <pre>true\n</pre>"},{"location":"reference/cognix/#cogbuildpython_extra_index_urls","title":"cog.build.python_extra_index_urls","text":"<p>Extra python repositories to use.</p> type list of string  source cognix/modules/cog/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/cognix/#cogbuildpython_packages","title":"cog.build.python_packages","text":"<p>A list of Python packages to install, from all of the specified repositories in <code>python_extra_index_urls</code>.</p> type list of string  source cognix/modules/cog/interface.nix default <pre>[ ]\n</pre> example <pre>[\n  \"torch\"\n]\n</pre>"},{"location":"reference/cognix/#cogbuildpython_snapshot_date","title":"cog.build.python_snapshot_date","text":"<p>When writing the lock file, ignore packages published to repositories after this date.</p> type null or string  source cognix/modules/cog/interface.nix default <pre>null\n</pre>"},{"location":"reference/cognix/#cogbuildpython_version","title":"cog.build.python_version","text":"<p>The minor version of Python to use.</p> type one of \"3.8\", \"3.9\", \"3.10\", \"3.11\", \"3.12\"  source cognix/modules/cog/interface.nix example <pre>\"3.11\"\n</pre>"},{"location":"reference/cognix/#cogbuildsystem_packages","title":"cog.build.system_packages","text":"<p>A list of Nix packages to install. A full list of the available packages can be found at https://search.nixos.org/packages . Additionally, pget is also available here, along with any other packages custom added to <code>cognix.systemPackages</code>.</p> type list of (path or string)  source cognix/modules/cog/interface.nix default <pre>[ ]\n</pre> example <pre>[\n  \"pget\"\n  \"openmpi\"\n]\n</pre>"},{"location":"reference/cognix/#concurrency","title":"concurrency","text":""},{"location":"reference/cognix/#cogconcurrencymax","title":"cog.concurrency.max","text":"<p>Allowed concurrency</p> type signed integer  source cognix/modules/cog/interface.nix default <pre>1\n</pre>"},{"location":"reference/cognix/#cogpredict","title":"cog.predict","text":"<p>The pointer to the Predictor object in your code, which defines how predictions are run on your model.</p> type string  source cognix/modules/cog/interface.nix default <pre>\"predict.py:Predictor\"\n</pre>"},{"location":"reference/cognix/#cogtrain","title":"cog.train","text":"<p>The pointer to the train function in your code, which defines how your model can be trained.</p> type null or string  source cognix/modules/cog/interface.nix default <pre>null\n</pre> example <pre>\"train.py:train\"\n</pre>"},{"location":"reference/cognix/#dockertools","title":"dockerTools","text":""},{"location":"reference/cognix/#streamlayeredimage","title":"streamLayeredImage","text":""},{"location":"reference/cognix/#dockertoolsstreamlayeredimagearchitecture","title":"dockerTools.streamLayeredImage.architecture","text":"<p>Image architecture, defaults to the architecture of the <code>hostPlatform</code> when unset</p> type string  source cognix/modules/stream-layered-image default <pre>\"amd64\"\n</pre>"},{"location":"reference/cognix/#dockertoolsstreamlayeredimageconfig","title":"dockerTools.streamLayeredImage.config","text":"<p>Docker config; e.g. what command to run on the container.</p> type attribute set of anything  source cognix/modules/stream-layered-image default <pre>{ }\n</pre>"},{"location":"reference/cognix/#dockertoolsstreamlayeredimagecontents","title":"dockerTools.streamLayeredImage.contents","text":"<p>Files to put on the image (a nix store path or list of paths).</p> type list of package  source cognix/modules/stream-layered-image default <pre>[ ]\n</pre>"},{"location":"reference/cognix/#dockertoolsstreamlayeredimagecreated","title":"dockerTools.streamLayeredImage.created","text":"<p>Time of creation of the image. Passing \"now\" will make the created date be the time of building.</p> type string  source cognix/modules/stream-layered-image default <pre>\"1970-01-01T00:00:01Z\"\n</pre>"},{"location":"reference/cognix/#dockertoolsstreamlayeredimageenablefakechroot","title":"dockerTools.streamLayeredImage.enableFakechroot","text":"<p>Whether to run fakeRootCommands in fakechroot as well, so that they appear to run inside the image, but have access to the normal Nix store. Perhaps this could be enabled on by default on pkgs.stdenv.buildPlatform.isLinux</p> type boolean  source cognix/modules/stream-layered-image default <pre>false\n</pre>"},{"location":"reference/cognix/#dockertoolsstreamlayeredimageextracommands","title":"dockerTools.streamLayeredImage.extraCommands","text":"<p>Optional bash script to run on the files prior to fixturizing the layer.</p> type strings concatenated with \"\\n\"  source cognix/modules/stream-layered-image default <pre>\"\"\n</pre>"},{"location":"reference/cognix/#dockertoolsstreamlayeredimageextrajsonfile","title":"dockerTools.streamLayeredImage.extraJSONFile","text":"<p>JSON file that's merged into the stream configuration. Use this to add things only available at build time, such as other build results.</p> type path  source cognix/modules/stream-layered-image default <pre>\"/nix/store/6llq5mliaf03nj25ib0lm841cgjw5mbg-empty.json\"\n</pre>"},{"location":"reference/cognix/#dockertoolsstreamlayeredimagefakerootcommands","title":"dockerTools.streamLayeredImage.fakeRootCommands","text":"<p>Optional bash script to run inside fakeroot environment. Could be used for changing ownership of files in customisation layer.</p> type strings concatenated with \"\\n\"  source cognix/modules/stream-layered-image default <pre>\"\"\n</pre>"},{"location":"reference/cognix/#dockertoolsstreamlayeredimagefromimage","title":"dockerTools.streamLayeredImage.fromImage","text":"<p>Parent image, to append to.</p> type null or string  source cognix/modules/stream-layered-image default <pre>null\n</pre>"},{"location":"reference/cognix/#dockertoolsstreamlayeredimageincludenixdb","title":"dockerTools.streamLayeredImage.includeNixDB","text":"<p>Whether to generate a Nix DB. The DB won't be merged between multiple stages.</p> type boolean  source cognix/modules/stream-layered-image default <pre>false\n</pre>"},{"location":"reference/cognix/#dockertoolsstreamlayeredimageincludestorepaths","title":"dockerTools.streamLayeredImage.includeStorePaths","text":"<p>Whether to include store paths in the image. You generally want to leave this on, but tooling may disable this to insert the store paths more efficiently via other means, such as bind mounting the host store.</p> type boolean  source cognix/modules/stream-layered-image default <pre>true\n</pre>"},{"location":"reference/cognix/#dockertoolsstreamlayeredimagemaxlayers","title":"dockerTools.streamLayeredImage.maxLayers","text":"<p>We pick 100 to ensure there is plenty of room for extension. I believe the actual maximum is 128.</p> type signed integer  source cognix/modules/stream-layered-image default <pre>100\n</pre>"},{"location":"reference/cognix/#dockertoolsstreamlayeredimagepassthru","title":"dockerTools.streamLayeredImage.passthru","text":"<p>Passthru arguments for the underlying derivation.</p> type attribute set of anything  source cognix/modules/stream-layered-image default <pre>{ }\n</pre>"},{"location":"reference/cognix/#dockertoolsstreamlayeredimagestreamscript","title":"dockerTools.streamLayeredImage.streamScript","text":"<p>Path to streaming script</p> type path  source cognix/modules/stream-layered-image default <pre>&lt;derivation stream&gt;\n</pre>"},{"location":"reference/cognix/#dockertoolsstreamlayeredimagetag","title":"dockerTools.streamLayeredImage.tag","text":"<p>Image tag, the Nix's output hash will be used if null</p> type null or string  source cognix/modules/stream-layered-image default <pre>null\n</pre>"},{"location":"reference/cognix/#lock","title":"lock","text":""},{"location":"reference/cognix/#lockcontent","title":"lock.content","text":"<p>The content of the lock file. All fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p> type anything  source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/cognix/#lockextrascripts","title":"lock.extraScripts","text":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p> <p>This allows adding custom logic to the lock file generation.</p> type list of path  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/cognix/#lockfields","title":"lock.fields","text":"<p>Fields of the lock file</p> type attribute set of (submodule)  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>{ }\n</pre> example <pre>{\n  pname = true;\n  version = true;\n}\n</pre>"},{"location":"reference/cognix/#name_1","title":"&lt;name&gt;","text":""},{"location":"reference/cognix/#lockfieldsnamedefault","title":"lock.fields.&lt;name&gt;.default","text":"<p>The default value in case the lock file doesn't exist or doesn't yet contain the field.</p> type null or anything  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>null\n</pre>"},{"location":"reference/cognix/#lockfieldsnamescript","title":"lock.fields.&lt;name&gt;.script","text":"<p>A script to refresh the value of this lock file field. The script should write the result as json file to $out.</p> type path  source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/cognix/#lockinvalidationdata","title":"lock.invalidationData","text":"<p>Pass any data that should invalidate the lock file when changed. This is useful for example when the lock file should be regenerated when the requirements change.</p> type anything  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>{ }\n</pre> example <pre>{\n  pip = {\n    lockVersion = \"2\";\n    requirements = [\n      \"requests\"\n      \"pillow\"\n    ];\n  };\n}\n</pre>"},{"location":"reference/cognix/#lib","title":"lib","text":""},{"location":"reference/cognix/#locklibcomputefodhash","title":"lock.lib.computeFODHash","text":"<p>Helper function to write the hash of a given FOD to $out.</p> type function that evaluates to a(n) path (read only) source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/cognix/#lockrefresh","title":"lock.refresh","text":"<p>Script to refresh the lock file</p> type package (read only) source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/cognix/#paths","title":"paths","text":""},{"location":"reference/cognix/#pathscachefile","title":"paths.cacheFile","text":"<p>Path to the eval cache file of the current package. Relative to \"${paths.projectRoot}/${paths.package}\"\".</p> type string  source dream2nix/modules/dream2nix/core/paths/interface.nix default <pre>\"cache.json\"\n</pre>"},{"location":"reference/cognix/#pathslockfile","title":"paths.lockFile","text":"<p>Path to the lock file of the current package. Relative to \"${paths.projectRoot}/${paths.package}\"\".</p> type string  source dream2nix/modules/dream2nix/core/paths/interface.nix default <pre>\"lock.json\"\n</pre>"},{"location":"reference/cognix/#pathspackage","title":"paths.package","text":"<p>Path to the directory containing the definition of the current package. Relative to 'paths.projectRoot'.</p> <p>This helps locating package definitions for lock &amp; update scripts.</p> type path or string  source dream2nix/modules/dream2nix/core/paths/interface.nix"},{"location":"reference/cognix/#pathsprojectroot","title":"paths.projectRoot","text":"<p>Path to the root of the project on which dream2nix operates. Must contain the marker file specified by 'paths.projectRootFile'</p> <p>This helps locating lock files at evaluation time.</p> type path  source dream2nix/modules/dream2nix/core/paths/interface.nix example <pre>./.\n</pre>"},{"location":"reference/cognix/#pathsprojectrootfile","title":"paths.projectRootFile","text":"<p>File name to look for to determine the root of the project. Ensure 'paths.projectRoot' contains a file named like this.</p> <p>This helps locating package definitions for lock &amp; update scripts.</p> type string  source dream2nix/modules/dream2nix/core/paths/interface.nix default <pre>\".git\"\n</pre> example <pre>\".git\"\n</pre>"},{"location":"reference/cognix/#public","title":"public","text":"<p>The final result of the evaluated package. Contains everything that nix expects from a derivation. Contains fields like name, outputs, drvPath, outPath, etc. Can be build with nix-build or <code>nix build</code>.</p> type lazy attribute set of anything  source dream2nix/modules/dream2nix/core/public/interface.nix, dream2nix/modules/dream2nix/core/docs"},{"location":"reference/cognix/#publicdocs","title":"public.docs","text":"<p>The manual of the package as a website</p> type package (read only) source dream2nix/modules/dream2nix/core/docs"},{"location":"reference/cognix/#python-env","title":"python-env","text":"<p>Sub-module containing the python environment that's used in the image.</p> type submodule  source cognix/modules/cog/interface.nix"},{"location":"reference/cognix/#python-envdeps","title":"python-env.deps","text":"<p>All dependencies of the package. This option should be set by the \"outer world\" and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p> <p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable. Nothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p> <p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p> type lazy attribute set of raw value  source dream2nix/modules/dream2nix/core/deps default <pre>{ }\n</pre> example <pre>{nixpkgs, ...}: {\n  inherit (nixpkgs) stdenv;\n  inherit (nixpkgs.haskellPackages) pandoc;\n}\n</pre>"},{"location":"reference/cognix/#python-envenv","title":"python-env.env","text":"<p>environment variables passed to the build environment</p> type attribute set of (null or boolean or signed integer or string or path or package or list of (boolean or signed integer or string or path or package))  source dream2nix/modules/dream2nix/core/env default <pre>{ }\n</pre>"},{"location":"reference/cognix/#lock_1","title":"lock","text":""},{"location":"reference/cognix/#python-envlockcontent","title":"python-env.lock.content","text":"<p>The content of the lock file. All fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p> type anything  source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/cognix/#python-envlockextrascripts","title":"python-env.lock.extraScripts","text":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p> <p>This allows adding custom logic to the lock file generation.</p> type list of path  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/cognix/#python-envlockfields","title":"python-env.lock.fields","text":"<p>Fields of the lock file</p> type attribute set of (submodule)  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>{ }\n</pre> example <pre>{\n  pname = true;\n  version = true;\n}\n</pre>"},{"location":"reference/cognix/#name_2","title":"&lt;name&gt;","text":""},{"location":"reference/cognix/#python-envlockfieldsnamedefault","title":"# python-env.lock.fields.&lt;name&gt;.default","text":"<p>The default value in case the lock file doesn't exist or doesn't yet contain the field.</p> type null or anything  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>null\n</pre>"},{"location":"reference/cognix/#python-envlockfieldsnamescript","title":"# python-env.lock.fields.&lt;name&gt;.script","text":"<p>A script to refresh the value of this lock file field. The script should write the result as json file to $out.</p> type path  source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/cognix/#python-envlockinvalidationdata","title":"python-env.lock.invalidationData","text":"<p>Pass any data that should invalidate the lock file when changed. This is useful for example when the lock file should be regenerated when the requirements change.</p> type anything  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>{ }\n</pre> example <pre>{\n  pip = {\n    lockVersion = \"2\";\n    requirements = [\n      \"requests\"\n      \"pillow\"\n    ];\n  };\n}\n</pre>"},{"location":"reference/cognix/#lib_1","title":"lib","text":""},{"location":"reference/cognix/#python-envlocklibcomputefodhash","title":"python-env.lock.lib.computeFODHash","text":"<p>Helper function to write the hash of a given FOD to $out.</p> type function that evaluates to a(n) path (read only) source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/cognix/#python-envlockrefresh","title":"python-env.lock.refresh","text":"<p>Script to refresh the lock file</p> type package (read only) source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/cognix/#python-envname","title":"python-env.name","text":"<p>The name of the package</p> type string  source dream2nix/modules/dream2nix/core/ui/interface.nix"},{"location":"reference/cognix/#paths_1","title":"paths","text":""},{"location":"reference/cognix/#python-envpathscachefile","title":"python-env.paths.cacheFile","text":"<p>Path to the eval cache file of the current package. Relative to \"${paths.projectRoot}/${paths.package}\"\".</p> type string  source dream2nix/modules/dream2nix/core/paths/interface.nix default <pre>\"cache.json\"\n</pre>"},{"location":"reference/cognix/#python-envpathslockfile","title":"python-env.paths.lockFile","text":"<p>Path to the lock file of the current package. Relative to \"${paths.projectRoot}/${paths.package}\"\".</p> type string  source dream2nix/modules/dream2nix/core/paths/interface.nix default <pre>\"lock.json\"\n</pre>"},{"location":"reference/cognix/#python-envpathspackage","title":"python-env.paths.package","text":"<p>Path to the directory containing the definition of the current package. Relative to 'paths.projectRoot'.</p> <p>This helps locating package definitions for lock &amp; update scripts.</p> type path or string  source dream2nix/modules/dream2nix/core/paths/interface.nix"},{"location":"reference/cognix/#python-envpathsprojectroot","title":"python-env.paths.projectRoot","text":"<p>Path to the root of the project on which dream2nix operates. Must contain the marker file specified by 'paths.projectRootFile'</p> <p>This helps locating lock files at evaluation time.</p> type path  source dream2nix/modules/dream2nix/core/paths/interface.nix example <pre>./.\n</pre>"},{"location":"reference/cognix/#python-envpathsprojectrootfile","title":"python-env.paths.projectRootFile","text":"<p>File name to look for to determine the root of the project. Ensure 'paths.projectRoot' contains a file named like this.</p> <p>This helps locating package definitions for lock &amp; update scripts.</p> type string  source dream2nix/modules/dream2nix/core/paths/interface.nix default <pre>\".git\"\n</pre> example <pre>\".git\"\n</pre>"},{"location":"reference/cognix/#python-envpublic","title":"python-env.public","text":"<p>The final result of the evaluated package. Contains everything that nix expects from a derivation. Contains fields like name, outputs, drvPath, outPath, etc. Can be build with nix-build or <code>nix build</code>.</p> type lazy attribute set of anything  source dream2nix/modules/dream2nix/core/public/interface.nix, dream2nix/modules/dream2nix/core/docs"},{"location":"reference/cognix/#python-envpublicdocs","title":"python-env.public.docs","text":"<p>The manual of the package as a website</p> type package (read only) source dream2nix/modules/dream2nix/core/docs"},{"location":"reference/cognix/#python-envversion","title":"python-env.version","text":"<p>The version of the package</p> type string  source dream2nix/modules/dream2nix/core/ui/interface.nix"},{"location":"reference/mkDerivation/","title":"mkDerivation","text":"state: released maintainers: @DavHau"},{"location":"reference/mkDerivation/#introduction","title":"Introduction","text":"<p>A package module based on the mkDerivation builder from nixpkgs</p>"},{"location":"reference/mkDerivation/#options","title":"Options","text":""},{"location":"reference/mkDerivation/#mkderivation","title":"mkDerivation","text":""},{"location":"reference/mkDerivation/#mkderivation__contentaddressed","title":"mkDerivation.__contentAddressed","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivation__darwinallowlocalnetworking","title":"mkDerivation.__darwinAllowLocalNetworking","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivation__impurehostdeps","title":"mkDerivation.__impureHostDeps","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivation__propagatedimpurehostdeps","title":"mkDerivation.__propagatedImpureHostDeps","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivation__structuredattrs","title":"mkDerivation.__structuredAttrs","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationallowsubstitutes","title":"mkDerivation.allowSubstitutes","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationallowedreferences","title":"mkDerivation.allowedReferences","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationallowedrequisites","title":"mkDerivation.allowedRequisites","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationargs","title":"mkDerivation.args","text":"type null or (list of (string or path))  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationbuildflags","title":"mkDerivation.buildFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationbuildinputs","title":"mkDerivation.buildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationbuildphase","title":"mkDerivation.buildPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationbuilder","title":"mkDerivation.builder","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationcheckflags","title":"mkDerivation.checkFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationcheckinputs","title":"mkDerivation.checkInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationcheckphase","title":"mkDerivation.checkPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationchecktarget","title":"mkDerivation.checkTarget","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationcmakeflags","title":"mkDerivation.cmakeFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationconfigureflags","title":"mkDerivation.configureFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationconfigurephase","title":"mkDerivation.configurePhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationconfigureplatforms","title":"mkDerivation.configurePlatforms","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationconfigurescript","title":"mkDerivation.configureScript","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdepsbuildbuild","title":"mkDerivation.depsBuildBuild","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdepsbuildbuildpropagated","title":"mkDerivation.depsBuildBuildPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdepsbuildtarget","title":"mkDerivation.depsBuildTarget","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdepsbuildtargetpropagated","title":"mkDerivation.depsBuildTargetPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdepshosthost","title":"mkDerivation.depsHostHost","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdepshosthostpropagated","title":"mkDerivation.depsHostHostPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdepstargettarget","title":"mkDerivation.depsTargetTarget","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdepstargettargetpropagated","title":"mkDerivation.depsTargetTargetPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdisallowedreferences","title":"mkDerivation.disallowedReferences","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdisallowedrequisites","title":"mkDerivation.disallowedRequisites","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdistflags","title":"mkDerivation.distFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdistphase","title":"mkDerivation.distPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdisttarget","title":"mkDerivation.distTarget","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdocheck","title":"mkDerivation.doCheck","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdodist","title":"mkDerivation.doDist","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdoinstallcheck","title":"mkDerivation.doInstallCheck","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontadddisabledeptrack","title":"mkDerivation.dontAddDisableDepTrack","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontaddprefix","title":"mkDerivation.dontAddPrefix","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontaddstaticconfigureflags","title":"mkDerivation.dontAddStaticConfigureFlags","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontbuild","title":"mkDerivation.dontBuild","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontconfigure","title":"mkDerivation.dontConfigure","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontcopydist","title":"mkDerivation.dontCopyDist","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontdisablestatic","title":"mkDerivation.dontDisableStatic","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontfixlibtool","title":"mkDerivation.dontFixLibtool","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontfixup","title":"mkDerivation.dontFixup","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontinstall","title":"mkDerivation.dontInstall","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontmakesourceswritable","title":"mkDerivation.dontMakeSourcesWritable","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontmovebin","title":"mkDerivation.dontMoveBin","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontpatch","title":"mkDerivation.dontPatch","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontpatchelf","title":"mkDerivation.dontPatchELF","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontpatchshebangs","title":"mkDerivation.dontPatchShebangs","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontprunelibtoolfiles","title":"mkDerivation.dontPruneLibtoolFiles","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontstrip","title":"mkDerivation.dontStrip","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontstriphost","title":"mkDerivation.dontStripHost","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontstriptarget","title":"mkDerivation.dontStripTarget","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationdontunpack","title":"mkDerivation.dontUnpack","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationenableparallelbuilding","title":"mkDerivation.enableParallelBuilding","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationenableparallelchecking","title":"mkDerivation.enableParallelChecking","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationexportreferencegraph","title":"mkDerivation.exportReferenceGraph","text":"type null or (list of (string or package))  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationfixupphase","title":"mkDerivation.fixupPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationforceshare","title":"mkDerivation.forceShare","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationhardeningdisable","title":"mkDerivation.hardeningDisable","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationhardeningenable","title":"mkDerivation.hardeningEnable","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationimpureenvvars","title":"mkDerivation.impureEnvVars","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationinstallcheckflags","title":"mkDerivation.installCheckFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationinstallcheckinputs","title":"mkDerivation.installCheckInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationinstallcheckphase","title":"mkDerivation.installCheckPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationinstallchecktarget","title":"mkDerivation.installCheckTarget","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationinstallflags","title":"mkDerivation.installFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationinstallphase","title":"mkDerivation.installPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationinstalltargets","title":"mkDerivation.installTargets","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationmakeflags","title":"mkDerivation.makeFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationmakefile","title":"mkDerivation.makefile","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationmesonflags","title":"mkDerivation.mesonFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationmeta","title":"mkDerivation.meta","text":"type null or (attribute set)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/mkDerivation/#mkderivationnativebuildinputs","title":"mkDerivation.nativeBuildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationnativecheckinputs","title":"mkDerivation.nativeCheckInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationoutputhash","title":"mkDerivation.outputHash","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationoutputhashalgo","title":"mkDerivation.outputHashAlgo","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationoutputhashmode","title":"mkDerivation.outputHashMode","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationoutputs","title":"mkDerivation.outputs","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>[\n  \"out\"\n]\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpassasfile","title":"mkDerivation.passAsFile","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpassthru","title":"mkDerivation.passthru","text":"type null or (attribute set)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpatchflags","title":"mkDerivation.patchFlags","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpatchphase","title":"mkDerivation.patchPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpatches","title":"mkDerivation.patches","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationphases","title":"mkDerivation.phases","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpos","title":"mkDerivation.pos","text":"type null or (attribute set)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpostbuild","title":"mkDerivation.postBuild","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpostcheck","title":"mkDerivation.postCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpostconfigure","title":"mkDerivation.postConfigure","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpostdist","title":"mkDerivation.postDist","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpostfixup","title":"mkDerivation.postFixup","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpostinstalcheck","title":"mkDerivation.postInstalCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpostinstall","title":"mkDerivation.postInstall","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpostpatch","title":"mkDerivation.postPatch","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpostphases","title":"mkDerivation.postPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpostunpack","title":"mkDerivation.postUnpack","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationprebuild","title":"mkDerivation.preBuild","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationprebuildphases","title":"mkDerivation.preBuildPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationprecheck","title":"mkDerivation.preCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpreconfigure","title":"mkDerivation.preConfigure","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpreconfigurephases","title":"mkDerivation.preConfigurePhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpredist","title":"mkDerivation.preDist","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpredistphases","title":"mkDerivation.preDistPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationprefixup","title":"mkDerivation.preFixup","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationprefixupphases","title":"mkDerivation.preFixupPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpreinstall","title":"mkDerivation.preInstall","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpreinstallcheck","title":"mkDerivation.preInstallCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpreinstallphases","title":"mkDerivation.preInstallPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationprepatch","title":"mkDerivation.prePatch","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationprephases","title":"mkDerivation.prePhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpreunpack","title":"mkDerivation.preUnpack","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpreferlocalbuild","title":"mkDerivation.preferLocalBuild","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationprefix","title":"mkDerivation.prefix","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationprefixkey","title":"mkDerivation.prefixKey","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpropagatedbuildinputs","title":"mkDerivation.propagatedBuildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpropagatednativebuildinputs","title":"mkDerivation.propagatedNativeBuildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationpropagatedsandboxprofile","title":"mkDerivation.propagatedSandboxProfile","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationrealbuilder","title":"mkDerivation.realBuilder","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationrequiredsystemfeatures","title":"mkDerivation.requiredSystemFeatures","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationsandboxprofile","title":"mkDerivation.sandboxProfile","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationseparatedebuginfo","title":"mkDerivation.separateDebugInfo","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationsetsourceroot","title":"mkDerivation.setSourceRoot","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationsetuphook","title":"mkDerivation.setupHook","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationshellhook","title":"mkDerivation.shellHook","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationsourceroot","title":"mkDerivation.sourceRoot","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationsrc","title":"mkDerivation.src","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationsrcs","title":"mkDerivation.srcs","text":"type null or (list of (string or path or package))  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationstrictdeps","title":"mkDerivation.strictDeps","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationstripallflags","title":"mkDerivation.stripAllFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationstripalllist","title":"mkDerivation.stripAllList","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationstripdebugflags","title":"mkDerivation.stripDebugFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationstripdebuglist","title":"mkDerivation.stripDebugList","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationtarballs","title":"mkDerivation.tarballs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationunpackcmd","title":"mkDerivation.unpackCmd","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationunpackphase","title":"mkDerivation.unpackPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#mkderivationversion","title":"mkDerivation.version","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/mkDerivation/#env","title":"env","text":"<p>environment variables passed to the build environment</p> type attribute set of (null or boolean or signed integer or string or path or package or list of (boolean or signed integer or string or path or package))  source dream2nix/modules/dream2nix/core/env default <pre>{ }\n</pre>"},{"location":"reference/mkDerivation/#name","title":"name","text":"<p>The name of the package</p> type string  source dream2nix/modules/dream2nix/core/ui/interface.nix"},{"location":"reference/mkDerivation/#public","title":"public","text":"<p>The final result of the evaluated package. Contains everything that nix expects from a derivation. Contains fields like name, outputs, drvPath, outPath, etc. Can be build with nix-build or <code>nix build</code>.</p> type lazy attribute set of anything  source dream2nix/modules/dream2nix/core/public/interface.nix"},{"location":"reference/mkDerivation/#version","title":"version","text":"<p>The version of the package</p> type string  source dream2nix/modules/dream2nix/core/ui/interface.nix"},{"location":"reference/mkDerivation/#deps","title":"deps","text":"<p>All dependencies of the package. This option should be set by the \"outer world\" and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p> <p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable. Nothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p> <p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p> type lazy attribute set of raw value  source dream2nix/modules/dream2nix/core/deps, dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>{ }\n</pre> example <pre>{nixpkgs, ...}: {\n  inherit (nixpkgs) stdenv;\n  inherit (nixpkgs.haskellPackages) pandoc;\n}\n</pre>"},{"location":"reference/mkDerivation/#depsstdenv","title":"deps.stdenv","text":"<p>The stdenv used for building this package</p> type raw value  source dream2nix/modules/dream2nix/mkDerivation/interface.nix"},{"location":"reference/overrides/","title":"overrides","text":"state: released maintainers: @DavHau"},{"location":"reference/overrides/#introduction","title":"Introduction","text":""},{"location":"reference/overrides/#options","title":"Options","text":""},{"location":"reference/overrides/#overrides","title":"overrides","text":"<p>Overrides applied only on dependencies matching the specified name.</p> type attribute set of module  source dream2nix/modules/dream2nix/overrides/interface.nix default <pre>{ }\n</pre> example <pre>{\n  hello = {\n    mkDerivation = {\n      postPatch = ''\n        substituteInPlace Makefile --replace /usr/local /usr\n      '';\n    };\n  };\n}\n</pre>"},{"location":"reference/overrides/#overrideall","title":"overrideAll","text":"<p>Overrides applied on all dependencies.</p> type module  source dream2nix/modules/dream2nix/overrides/interface.nix default <pre>{ }\n</pre> example <pre>{\n  mkDerivation = {\n    doCheck = false;\n  };\n}\n</pre>"},{"location":"reference/pip/","title":"pip","text":"state: released maintainers: @phaer"},{"location":"reference/pip/#introduction","title":"Introduction","text":"<p>A module to package python projects via pip.</p> <p>Under the hood, it uses ./pkgs/fetchPipMetadata to run <code>pip install --dry-run --report [...]</code> with reproducible inputs and converts the resulting installation report into a dream2nix lock file.</p> <p>Note</p> <p>Due to limitations in <code>pip</code>s cross-platform support, the resulting lock-files are platform-specific! We therefore recommend setting <code>paths.lockFile</code> to <code>lock.${system}.json</code> for all projects where you use the pip module.</p> <p>Check out the pdm module if you need a solution that allows locking for multiple platforms at once!</p> <p>During building, it uses this lock file to build each dependency as well as the top-level package in separate derivations while allowing overrides and further customization via dream2nix module system.</p>"},{"location":"reference/pip/#getting-started","title":"Getting started","text":"<p>See Build a python project with pip.</p>"},{"location":"reference/pip/#options","title":"Options","text":""},{"location":"reference/pip/#pip","title":"pip","text":"type submodule  source dream2nix/modules/dream2nix/pip/pip-hotfixes/interface.nix, dream2nix/modules/dream2nix/pip/interface.nix"},{"location":"reference/pip/#pipbuilddependencies","title":"pip.buildDependencies","text":"<p>python packages to be added only as buildInputs. These should be somehow installable from <code>requirementsList</code> or <code>requirementsFiles</code> too; listing them here doesn't do that automatically.</p> type attribute set of boolean  source dream2nix/modules/dream2nix/pip/interface.nix default <pre>{\n  cython = true;\n  flit-core = true;\n  flit-scm = true;\n  hatch-fancy-pypi-readme = true;\n  hatch-nodejs-version = true;\n  hatch-vcs = true;\n  hatchling = true;\n  pbr = true;\n  pdm-pep517 = true;\n  poetry-core = true;\n  poetry-dynamic-versioning = true;\n  setuptools = true;\n  setuptools-odoo = true;\n  setuptools-scm = true;\n  versioneer = true;\n  wheel = true;\n}\n</pre> example <pre>{\n  setuptools-scm = false; # To disable the default\n  easy_install = true; # To select easy_install as a buildInput\n}\n</pre>"},{"location":"reference/pip/#pipbuildextras","title":"pip.buildExtras","text":"<p>list of python \"extras\" to build with. This can be a subset of the extras in your lock file.</p> type list of string  source dream2nix/modules/dream2nix/pip/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipdeps","title":"pip.deps","text":"<p>All dependencies of the package. This option should be set by the \"outer world\" and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p> <p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable. Nothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p> <p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p> type lazy attribute set of raw value  source dream2nix/modules/dream2nix/core/deps default <pre>{ }\n</pre> example <pre>{nixpkgs, ...}: {\n  inherit (nixpkgs) stdenv;\n  inherit (nixpkgs.haskellPackages) pandoc;\n}\n</pre>"},{"location":"reference/pip/#pipeditables","title":"pip.editables","text":"type attribute set of string  source dream2nix/modules/dream2nix/python-editables/interface.nix"},{"location":"reference/pip/#pipeditablesdevshell","title":"pip.editablesDevShell","text":"type package (read only) source dream2nix/modules/dream2nix/python-editables/interface.nix"},{"location":"reference/pip/#pipeditablesshellhook","title":"pip.editablesShellHook","text":"type string (read only) source dream2nix/modules/dream2nix/python-editables/interface.nix"},{"location":"reference/pip/#pipenv","title":"pip.env","text":"<p>environment variables exported while locking</p> type attribute set of string  source dream2nix/modules/dream2nix/pip/interface.nix default <pre>{ }\n</pre> example <pre>{\n  PIP_FIND_LINKS = \"${config.deps.setuptools.dist}\";\n}\n</pre>"},{"location":"reference/pip/#pipflattendependencies","title":"pip.flattenDependencies","text":"<p>Use all dependencies as top-level dependencies</p> type boolean  source dream2nix/modules/dream2nix/pip/pip-hotfixes/interface.nix default <pre>false\n</pre>"},{"location":"reference/pip/#pipignoreddependencies","title":"pip.ignoredDependencies","text":"<p>list of dependencies to ignore</p> type list of string  source dream2nix/modules/dream2nix/pip/pip-hotfixes/interface.nix default <pre>[\n  \"wheel\"\n]\n</pre>"},{"location":"reference/pip/#pipnativebuildinputs","title":"pip.nativeBuildInputs","text":"<p>list of native packages to include during metadata generation</p> type list of package  source dream2nix/modules/dream2nix/pip/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipoverrideall","title":"pip.overrideAll","text":"<p>Overrides applied on all dependencies.</p> type module  source dream2nix/modules/dream2nix/overrides/interface.nix default <pre>{ }\n</pre> example <pre>{\n  mkDerivation = {\n    doCheck = false;\n  };\n}\n</pre>"},{"location":"reference/pip/#buildpythonpackage","title":"buildPythonPackage","text":""},{"location":"reference/pip/#pipoverrideallbuildpythonpackagebuild-system","title":"pip.overrideAll.buildPythonPackage.build-system","text":"<p>Build-time only Python dependencies. Items listed in <code>build-system.requires</code>/<code>setup_requires</code>.</p> type list of (string or path or package)  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipoverrideallbuildpythonpackagecatchconflicts","title":"pip.overrideAll.buildPythonPackage.catchConflicts","text":"<p>Raise an error if two packages are installed with the same name TODO: For cross we probably need a different PYTHONPATH, or not add the runtime deps until after buildPhase.</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>''\n  true if the host and build platforms are the same, false otherwise.\n''\n</pre>"},{"location":"reference/pip/#pipoverrideallbuildpythonpackagedependencies","title":"pip.overrideAll.buildPythonPackage.dependencies","text":"<p>List of runtime python dependencies. Aside from propagating dependencies, <code>buildPythonPackage</code> also injects code into and wraps executables with the paths included in this list. Items listed in <code>install_requires</code> go here.</p> type list of (string or path or package)  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipoverrideallbuildpythonpackagedisabled","title":"pip.overrideAll.buildPythonPackage.disabled","text":"<p>used to disable derivation, useful for specific python versions</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>false\n</pre>"},{"location":"reference/pip/#pipoverrideallbuildpythonpackagedisabledtestpaths","title":"pip.overrideAll.buildPythonPackage.disabledTestPaths","text":"<p>Test paths to ignore in checkPhase</p> type list of anything  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipoverrideallbuildpythonpackagedisabledtests","title":"pip.overrideAll.buildPythonPackage.disabledTests","text":"<p>Disable running specific unit tests</p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipoverrideallbuildpythonpackagedontusepipinstall","title":"pip.overrideAll.buildPythonPackage.dontUsePipInstall","text":"<p>Don't use Pip to install a wheel Note this is actually a variable for the pipInstallPhase in pip's setupHook. It's included here to prevent an infinite recursion.</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>false\n</pre>"},{"location":"reference/pip/#pipoverrideallbuildpythonpackagedontwrappythonprograms","title":"pip.overrideAll.buildPythonPackage.dontWrapPythonPrograms","text":"<p>Skip wrapping of python programs altogether</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>false\n</pre>"},{"location":"reference/pip/#pipoverrideallbuildpythonpackageformat","title":"pip.overrideAll.buildPythonPackage.format","text":"<p>Several package formats are supported:   <code>null</code>: Disable this legacy option and use the new <code>pyproject</code> option instead.   \"setuptools\" : Install a common setuptools/distutils based package. This builds a wheel.   \"wheel\" : Install from a pre-compiled wheel.   \"flit\" : Install a flit package. This builds a wheel.   \"pyproject\": Install a package using a <code>pyproject.toml</code> file (PEP517). This builds a wheel.   \"egg\": Install a package from an egg.   \"other\" : Provide your own buildPhase and installPhase.</p> type null or string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>\"setuptools\"\n</pre>"},{"location":"reference/pip/#pipoverrideallbuildpythonpackagemakewrapperargs","title":"pip.overrideAll.buildPythonPackage.makeWrapperArgs","text":"<p>Additional arguments to pass to the makeWrapper function, which wraps generated binaries.</p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipoverrideallbuildpythonpackageoptional-dependencies","title":"pip.overrideAll.buildPythonPackage.optional-dependencies","text":"<p>Optional feature flagged dependencies. Items listed in <code>extras_requires</code> go here.</p> type attribute set of (string or path or package)  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/pip/#pipoverrideallbuildpythonpackagepermitusersite","title":"pip.overrideAll.buildPythonPackage.permitUserSite","text":"<p>Skip setting the PYTHONNOUSERSITE environment variable in wrapped programs</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>false\n</pre>"},{"location":"reference/pip/#pipoverrideallbuildpythonpackagepipinstallflags","title":"pip.overrideAll.buildPythonPackage.pipInstallFlags","text":"<p>Extra flags passed to <code>pip install</code></p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipoverrideallbuildpythonpackagepyproject","title":"pip.overrideAll.buildPythonPackage.pyproject","text":"<p>Whether the pyproject format should be used. When set to <code>true</code>, <code>pypaBuildHook</code> will be used, and you can add the required build dependencies from <code>build-system.requires</code> to <code>build-system</code>.</p> <p>Note that the pyproject format falls back to using <code>setuptools</code>, so you can use <code>pyproject = true</code> even if the package only has a <code>setup.py</code>. When set to <code>false</code>, you can use the existing hooks or provide your own logic to build the package. This can be useful for packages that don't support the pyproject format.</p> <p>When unset, the legacy <code>setuptools</code> hooks are used for backwards compatibility.</p> type null or boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallbuildpythonpackagepytestflagsarray","title":"pip.overrideAll.buildPythonPackage.pytestFlagsArray","text":"<p>Extra flags passed to pytest</p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipoverrideallbuildpythonpackagepythonimportscheck","title":"pip.overrideAll.buildPythonPackage.pythonImportsCheck","text":"<p>Check whether importing the listed modules works</p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipoverrideallbuildpythonpackageremovebinbytecode","title":"pip.overrideAll.buildPythonPackage.removeBinBytecode","text":"<p>Remove bytecode from bin folder. When a Python script has the extension <code>.py</code>, bytecode is generated Typically, executables in bin have no extension, so no bytecode is generated. However, some packages do provide executables with extensions, and thus bytecode is generated.</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>true\n</pre>"},{"location":"reference/pip/#pipoverridealldeps","title":"pip.overrideAll.deps","text":"<p>All dependencies of the package. This option should be set by the \"outer world\" and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p> <p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable. Nothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p> <p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p> type lazy attribute set of raw value  source dream2nix/modules/dream2nix/mkDerivation/interface.nix, dream2nix/modules/dream2nix/core/deps, dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>{ }\n</pre> example <pre>{nixpkgs, ...}: {\n  inherit (nixpkgs) stdenv;\n  inherit (nixpkgs.haskellPackages) pandoc;\n}\n</pre>"},{"location":"reference/pip/#pipoverridealldepspython","title":"pip.overrideAll.deps.python","text":"<p>The python interpreter package to use</p> type package  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix"},{"location":"reference/pip/#pipoverridealldepsstdenv","title":"pip.overrideAll.deps.stdenv","text":"<p>The stdenv used for building this package</p> type raw value  source dream2nix/modules/dream2nix/mkDerivation/interface.nix"},{"location":"reference/pip/#pipoverrideallenv","title":"pip.overrideAll.env","text":"<p>environment variables passed to the build environment</p> type attribute set of (null or boolean or signed integer or string or path or package or list of (boolean or signed integer or string or path or package))  source dream2nix/modules/dream2nix/core/env default <pre>{ }\n</pre>"},{"location":"reference/pip/#mkderivation","title":"mkDerivation","text":""},{"location":"reference/pip/#pipoverrideallmkderivation__contentaddressed","title":"pip.overrideAll.mkDerivation.__contentAddressed","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivation__darwinallowlocalnetworking","title":"pip.overrideAll.mkDerivation.__darwinAllowLocalNetworking","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivation__impurehostdeps","title":"pip.overrideAll.mkDerivation.__impureHostDeps","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivation__propagatedimpurehostdeps","title":"pip.overrideAll.mkDerivation.__propagatedImpureHostDeps","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivation__structuredattrs","title":"pip.overrideAll.mkDerivation.__structuredAttrs","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationallowsubstitutes","title":"pip.overrideAll.mkDerivation.allowSubstitutes","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationallowedreferences","title":"pip.overrideAll.mkDerivation.allowedReferences","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationallowedrequisites","title":"pip.overrideAll.mkDerivation.allowedRequisites","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationargs","title":"pip.overrideAll.mkDerivation.args","text":"type null or (list of (string or path))  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationbuildflags","title":"pip.overrideAll.mkDerivation.buildFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationbuildinputs","title":"pip.overrideAll.mkDerivation.buildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationbuildphase","title":"pip.overrideAll.mkDerivation.buildPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationbuilder","title":"pip.overrideAll.mkDerivation.builder","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationcheckflags","title":"pip.overrideAll.mkDerivation.checkFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationcheckinputs","title":"pip.overrideAll.mkDerivation.checkInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationcheckphase","title":"pip.overrideAll.mkDerivation.checkPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationchecktarget","title":"pip.overrideAll.mkDerivation.checkTarget","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationcmakeflags","title":"pip.overrideAll.mkDerivation.cmakeFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationconfigureflags","title":"pip.overrideAll.mkDerivation.configureFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationconfigurephase","title":"pip.overrideAll.mkDerivation.configurePhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationconfigureplatforms","title":"pip.overrideAll.mkDerivation.configurePlatforms","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationconfigurescript","title":"pip.overrideAll.mkDerivation.configureScript","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdepsbuildbuild","title":"pip.overrideAll.mkDerivation.depsBuildBuild","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdepsbuildbuildpropagated","title":"pip.overrideAll.mkDerivation.depsBuildBuildPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdepsbuildtarget","title":"pip.overrideAll.mkDerivation.depsBuildTarget","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdepsbuildtargetpropagated","title":"pip.overrideAll.mkDerivation.depsBuildTargetPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdepshosthost","title":"pip.overrideAll.mkDerivation.depsHostHost","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdepshosthostpropagated","title":"pip.overrideAll.mkDerivation.depsHostHostPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdepstargettarget","title":"pip.overrideAll.mkDerivation.depsTargetTarget","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdepstargettargetpropagated","title":"pip.overrideAll.mkDerivation.depsTargetTargetPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdisallowedreferences","title":"pip.overrideAll.mkDerivation.disallowedReferences","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdisallowedrequisites","title":"pip.overrideAll.mkDerivation.disallowedRequisites","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdistflags","title":"pip.overrideAll.mkDerivation.distFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdistphase","title":"pip.overrideAll.mkDerivation.distPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdisttarget","title":"pip.overrideAll.mkDerivation.distTarget","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdocheck","title":"pip.overrideAll.mkDerivation.doCheck","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdodist","title":"pip.overrideAll.mkDerivation.doDist","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdoinstallcheck","title":"pip.overrideAll.mkDerivation.doInstallCheck","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontadddisabledeptrack","title":"pip.overrideAll.mkDerivation.dontAddDisableDepTrack","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontaddprefix","title":"pip.overrideAll.mkDerivation.dontAddPrefix","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontaddstaticconfigureflags","title":"pip.overrideAll.mkDerivation.dontAddStaticConfigureFlags","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontbuild","title":"pip.overrideAll.mkDerivation.dontBuild","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontconfigure","title":"pip.overrideAll.mkDerivation.dontConfigure","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontcopydist","title":"pip.overrideAll.mkDerivation.dontCopyDist","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontdisablestatic","title":"pip.overrideAll.mkDerivation.dontDisableStatic","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontfixlibtool","title":"pip.overrideAll.mkDerivation.dontFixLibtool","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontfixup","title":"pip.overrideAll.mkDerivation.dontFixup","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontinstall","title":"pip.overrideAll.mkDerivation.dontInstall","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontmakesourceswritable","title":"pip.overrideAll.mkDerivation.dontMakeSourcesWritable","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontmovebin","title":"pip.overrideAll.mkDerivation.dontMoveBin","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontpatch","title":"pip.overrideAll.mkDerivation.dontPatch","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontpatchelf","title":"pip.overrideAll.mkDerivation.dontPatchELF","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontpatchshebangs","title":"pip.overrideAll.mkDerivation.dontPatchShebangs","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontprunelibtoolfiles","title":"pip.overrideAll.mkDerivation.dontPruneLibtoolFiles","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontstrip","title":"pip.overrideAll.mkDerivation.dontStrip","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontstriphost","title":"pip.overrideAll.mkDerivation.dontStripHost","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontstriptarget","title":"pip.overrideAll.mkDerivation.dontStripTarget","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationdontunpack","title":"pip.overrideAll.mkDerivation.dontUnpack","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationenableparallelbuilding","title":"pip.overrideAll.mkDerivation.enableParallelBuilding","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationenableparallelchecking","title":"pip.overrideAll.mkDerivation.enableParallelChecking","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationexportreferencegraph","title":"pip.overrideAll.mkDerivation.exportReferenceGraph","text":"type null or (list of (string or package))  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationfixupphase","title":"pip.overrideAll.mkDerivation.fixupPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationforceshare","title":"pip.overrideAll.mkDerivation.forceShare","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationhardeningdisable","title":"pip.overrideAll.mkDerivation.hardeningDisable","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationhardeningenable","title":"pip.overrideAll.mkDerivation.hardeningEnable","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationimpureenvvars","title":"pip.overrideAll.mkDerivation.impureEnvVars","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationinstallcheckflags","title":"pip.overrideAll.mkDerivation.installCheckFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationinstallcheckinputs","title":"pip.overrideAll.mkDerivation.installCheckInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationinstallcheckphase","title":"pip.overrideAll.mkDerivation.installCheckPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationinstallchecktarget","title":"pip.overrideAll.mkDerivation.installCheckTarget","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationinstallflags","title":"pip.overrideAll.mkDerivation.installFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationinstallphase","title":"pip.overrideAll.mkDerivation.installPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationinstalltargets","title":"pip.overrideAll.mkDerivation.installTargets","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationmakeflags","title":"pip.overrideAll.mkDerivation.makeFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationmakefile","title":"pip.overrideAll.mkDerivation.makefile","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationmesonflags","title":"pip.overrideAll.mkDerivation.mesonFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationmeta","title":"pip.overrideAll.mkDerivation.meta","text":"type null or (attribute set)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationnativebuildinputs","title":"pip.overrideAll.mkDerivation.nativeBuildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationnativecheckinputs","title":"pip.overrideAll.mkDerivation.nativeCheckInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationoutputhash","title":"pip.overrideAll.mkDerivation.outputHash","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationoutputhashalgo","title":"pip.overrideAll.mkDerivation.outputHashAlgo","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationoutputhashmode","title":"pip.overrideAll.mkDerivation.outputHashMode","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationoutputs","title":"pip.overrideAll.mkDerivation.outputs","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>[\n  \"out\"\n]\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpassasfile","title":"pip.overrideAll.mkDerivation.passAsFile","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpassthru","title":"pip.overrideAll.mkDerivation.passthru","text":"type null or (attribute set)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpatchflags","title":"pip.overrideAll.mkDerivation.patchFlags","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpatchphase","title":"pip.overrideAll.mkDerivation.patchPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpatches","title":"pip.overrideAll.mkDerivation.patches","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationphases","title":"pip.overrideAll.mkDerivation.phases","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpos","title":"pip.overrideAll.mkDerivation.pos","text":"type null or (attribute set)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpostbuild","title":"pip.overrideAll.mkDerivation.postBuild","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpostcheck","title":"pip.overrideAll.mkDerivation.postCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpostconfigure","title":"pip.overrideAll.mkDerivation.postConfigure","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpostdist","title":"pip.overrideAll.mkDerivation.postDist","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpostfixup","title":"pip.overrideAll.mkDerivation.postFixup","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpostinstalcheck","title":"pip.overrideAll.mkDerivation.postInstalCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpostinstall","title":"pip.overrideAll.mkDerivation.postInstall","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpostpatch","title":"pip.overrideAll.mkDerivation.postPatch","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpostphases","title":"pip.overrideAll.mkDerivation.postPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpostunpack","title":"pip.overrideAll.mkDerivation.postUnpack","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationprebuild","title":"pip.overrideAll.mkDerivation.preBuild","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationprebuildphases","title":"pip.overrideAll.mkDerivation.preBuildPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationprecheck","title":"pip.overrideAll.mkDerivation.preCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpreconfigure","title":"pip.overrideAll.mkDerivation.preConfigure","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpreconfigurephases","title":"pip.overrideAll.mkDerivation.preConfigurePhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpredist","title":"pip.overrideAll.mkDerivation.preDist","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpredistphases","title":"pip.overrideAll.mkDerivation.preDistPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationprefixup","title":"pip.overrideAll.mkDerivation.preFixup","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationprefixupphases","title":"pip.overrideAll.mkDerivation.preFixupPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpreinstall","title":"pip.overrideAll.mkDerivation.preInstall","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpreinstallcheck","title":"pip.overrideAll.mkDerivation.preInstallCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpreinstallphases","title":"pip.overrideAll.mkDerivation.preInstallPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationprepatch","title":"pip.overrideAll.mkDerivation.prePatch","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationprephases","title":"pip.overrideAll.mkDerivation.prePhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpreunpack","title":"pip.overrideAll.mkDerivation.preUnpack","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpreferlocalbuild","title":"pip.overrideAll.mkDerivation.preferLocalBuild","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationprefix","title":"pip.overrideAll.mkDerivation.prefix","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationprefixkey","title":"pip.overrideAll.mkDerivation.prefixKey","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpropagatedbuildinputs","title":"pip.overrideAll.mkDerivation.propagatedBuildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpropagatednativebuildinputs","title":"pip.overrideAll.mkDerivation.propagatedNativeBuildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationpropagatedsandboxprofile","title":"pip.overrideAll.mkDerivation.propagatedSandboxProfile","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationrealbuilder","title":"pip.overrideAll.mkDerivation.realBuilder","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationrequiredsystemfeatures","title":"pip.overrideAll.mkDerivation.requiredSystemFeatures","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationsandboxprofile","title":"pip.overrideAll.mkDerivation.sandboxProfile","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationseparatedebuginfo","title":"pip.overrideAll.mkDerivation.separateDebugInfo","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationsetsourceroot","title":"pip.overrideAll.mkDerivation.setSourceRoot","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationsetuphook","title":"pip.overrideAll.mkDerivation.setupHook","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationshellhook","title":"pip.overrideAll.mkDerivation.shellHook","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationsourceroot","title":"pip.overrideAll.mkDerivation.sourceRoot","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationsrc","title":"pip.overrideAll.mkDerivation.src","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationsrcs","title":"pip.overrideAll.mkDerivation.srcs","text":"type null or (list of (string or path or package))  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationstrictdeps","title":"pip.overrideAll.mkDerivation.strictDeps","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationstripallflags","title":"pip.overrideAll.mkDerivation.stripAllFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationstripalllist","title":"pip.overrideAll.mkDerivation.stripAllList","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationstripdebugflags","title":"pip.overrideAll.mkDerivation.stripDebugFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationstripdebuglist","title":"pip.overrideAll.mkDerivation.stripDebugList","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationtarballs","title":"pip.overrideAll.mkDerivation.tarballs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationunpackcmd","title":"pip.overrideAll.mkDerivation.unpackCmd","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationunpackphase","title":"pip.overrideAll.mkDerivation.unpackPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallmkderivationversion","title":"pip.overrideAll.mkDerivation.version","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverrideallname","title":"pip.overrideAll.name","text":"<p>The name of the package</p> type string  source dream2nix/modules/dream2nix/core/ui/interface.nix"},{"location":"reference/pip/#pipoverrideallpublic","title":"pip.overrideAll.public","text":"<p>The final result of the evaluated package. Contains everything that nix expects from a derivation. Contains fields like name, outputs, drvPath, outPath, etc. Can be build with nix-build or <code>nix build</code>.</p> type lazy attribute set of anything  source dream2nix/modules/dream2nix/core/public/interface.nix"},{"location":"reference/pip/#pipoverrideallversion","title":"pip.overrideAll.version","text":"<p>The version of the package</p> type string  source dream2nix/modules/dream2nix/core/ui/interface.nix"},{"location":"reference/pip/#pipoverrides","title":"pip.overrides","text":"<p>Overrides applied only on dependencies matching the specified name.</p> type attribute set of module  source dream2nix/modules/dream2nix/overrides/interface.nix default <pre>{ }\n</pre> example <pre>{\n  hello = {\n    mkDerivation = {\n      postPatch = ''\n        substituteInPlace Makefile --replace /usr/local /usr\n      '';\n    };\n  };\n}\n</pre>"},{"location":"reference/pip/#name","title":"&lt;name&gt;","text":""},{"location":"reference/pip/#buildpythonpackage_1","title":"buildPythonPackage","text":""},{"location":"reference/pip/#pipoverridesnamebuildpythonpackagebuild-system","title":"# pip.overrides.&lt;name&gt;.buildPythonPackage.build-system","text":"<p>Build-time only Python dependencies. Items listed in <code>build-system.requires</code>/<code>setup_requires</code>.</p> type list of (string or path or package)  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipoverridesnamebuildpythonpackagecatchconflicts","title":"# pip.overrides.&lt;name&gt;.buildPythonPackage.catchConflicts","text":"<p>Raise an error if two packages are installed with the same name TODO: For cross we probably need a different PYTHONPATH, or not add the runtime deps until after buildPhase.</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>''\n  true if the host and build platforms are the same, false otherwise.\n''\n</pre>"},{"location":"reference/pip/#pipoverridesnamebuildpythonpackagedependencies","title":"# pip.overrides.&lt;name&gt;.buildPythonPackage.dependencies","text":"<p>List of runtime python dependencies. Aside from propagating dependencies, <code>buildPythonPackage</code> also injects code into and wraps executables with the paths included in this list. Items listed in <code>install_requires</code> go here.</p> type list of (string or path or package)  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipoverridesnamebuildpythonpackagedisabled","title":"# pip.overrides.&lt;name&gt;.buildPythonPackage.disabled","text":"<p>used to disable derivation, useful for specific python versions</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>false\n</pre>"},{"location":"reference/pip/#pipoverridesnamebuildpythonpackagedisabledtestpaths","title":"# pip.overrides.&lt;name&gt;.buildPythonPackage.disabledTestPaths","text":"<p>Test paths to ignore in checkPhase</p> type list of anything  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipoverridesnamebuildpythonpackagedisabledtests","title":"# pip.overrides.&lt;name&gt;.buildPythonPackage.disabledTests","text":"<p>Disable running specific unit tests</p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipoverridesnamebuildpythonpackagedontusepipinstall","title":"# pip.overrides.&lt;name&gt;.buildPythonPackage.dontUsePipInstall","text":"<p>Don't use Pip to install a wheel Note this is actually a variable for the pipInstallPhase in pip's setupHook. It's included here to prevent an infinite recursion.</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>false\n</pre>"},{"location":"reference/pip/#pipoverridesnamebuildpythonpackagedontwrappythonprograms","title":"# pip.overrides.&lt;name&gt;.buildPythonPackage.dontWrapPythonPrograms","text":"<p>Skip wrapping of python programs altogether</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>false\n</pre>"},{"location":"reference/pip/#pipoverridesnamebuildpythonpackageformat","title":"# pip.overrides.&lt;name&gt;.buildPythonPackage.format","text":"<p>Several package formats are supported:   <code>null</code>: Disable this legacy option and use the new <code>pyproject</code> option instead.   \"setuptools\" : Install a common setuptools/distutils based package. This builds a wheel.   \"wheel\" : Install from a pre-compiled wheel.   \"flit\" : Install a flit package. This builds a wheel.   \"pyproject\": Install a package using a <code>pyproject.toml</code> file (PEP517). This builds a wheel.   \"egg\": Install a package from an egg.   \"other\" : Provide your own buildPhase and installPhase.</p> type null or string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>\"setuptools\"\n</pre>"},{"location":"reference/pip/#pipoverridesnamebuildpythonpackagemakewrapperargs","title":"# pip.overrides.&lt;name&gt;.buildPythonPackage.makeWrapperArgs","text":"<p>Additional arguments to pass to the makeWrapper function, which wraps generated binaries.</p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipoverridesnamebuildpythonpackageoptional-dependencies","title":"# pip.overrides.&lt;name&gt;.buildPythonPackage.optional-dependencies","text":"<p>Optional feature flagged dependencies. Items listed in <code>extras_requires</code> go here.</p> type attribute set of (string or path or package)  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/pip/#pipoverridesnamebuildpythonpackagepermitusersite","title":"# pip.overrides.&lt;name&gt;.buildPythonPackage.permitUserSite","text":"<p>Skip setting the PYTHONNOUSERSITE environment variable in wrapped programs</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>false\n</pre>"},{"location":"reference/pip/#pipoverridesnamebuildpythonpackagepipinstallflags","title":"# pip.overrides.&lt;name&gt;.buildPythonPackage.pipInstallFlags","text":"<p>Extra flags passed to <code>pip install</code></p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipoverridesnamebuildpythonpackagepyproject","title":"# pip.overrides.&lt;name&gt;.buildPythonPackage.pyproject","text":"<p>Whether the pyproject format should be used. When set to <code>true</code>, <code>pypaBuildHook</code> will be used, and you can add the required build dependencies from <code>build-system.requires</code> to <code>build-system</code>.</p> <p>Note that the pyproject format falls back to using <code>setuptools</code>, so you can use <code>pyproject = true</code> even if the package only has a <code>setup.py</code>. When set to <code>false</code>, you can use the existing hooks or provide your own logic to build the package. This can be useful for packages that don't support the pyproject format.</p> <p>When unset, the legacy <code>setuptools</code> hooks are used for backwards compatibility.</p> type null or boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamebuildpythonpackagepytestflagsarray","title":"# pip.overrides.&lt;name&gt;.buildPythonPackage.pytestFlagsArray","text":"<p>Extra flags passed to pytest</p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipoverridesnamebuildpythonpackagepythonimportscheck","title":"# pip.overrides.&lt;name&gt;.buildPythonPackage.pythonImportsCheck","text":"<p>Check whether importing the listed modules works</p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pipoverridesnamebuildpythonpackageremovebinbytecode","title":"# pip.overrides.&lt;name&gt;.buildPythonPackage.removeBinBytecode","text":"<p>Remove bytecode from bin folder. When a Python script has the extension <code>.py</code>, bytecode is generated Typically, executables in bin have no extension, so no bytecode is generated. However, some packages do provide executables with extensions, and thus bytecode is generated.</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>true\n</pre>"},{"location":"reference/pip/#pipoverridesnamedeps","title":"pip.overrides.&lt;name&gt;.deps","text":"<p>All dependencies of the package. This option should be set by the \"outer world\" and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p> <p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable. Nothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p> <p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p> type lazy attribute set of raw value  source dream2nix/modules/dream2nix/mkDerivation/interface.nix, dream2nix/modules/dream2nix/core/deps, dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>{ }\n</pre> example <pre>{nixpkgs, ...}: {\n  inherit (nixpkgs) stdenv;\n  inherit (nixpkgs.haskellPackages) pandoc;\n}\n</pre>"},{"location":"reference/pip/#pipoverridesnamedepspython","title":"# pip.overrides.&lt;name&gt;.deps.python","text":"<p>The python interpreter package to use</p> type package  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix"},{"location":"reference/pip/#pipoverridesnamedepsstdenv","title":"# pip.overrides.&lt;name&gt;.deps.stdenv","text":"<p>The stdenv used for building this package</p> type raw value  source dream2nix/modules/dream2nix/mkDerivation/interface.nix"},{"location":"reference/pip/#pipoverridesnameenv","title":"pip.overrides.&lt;name&gt;.env","text":"<p>environment variables passed to the build environment</p> type attribute set of (null or boolean or signed integer or string or path or package or list of (boolean or signed integer or string or path or package))  source dream2nix/modules/dream2nix/core/env default <pre>{ }\n</pre>"},{"location":"reference/pip/#mkderivation_1","title":"mkDerivation","text":""},{"location":"reference/pip/#pipoverridesnamemkderivation__contentaddressed","title":"# pip.overrides.&lt;name&gt;.mkDerivation.__contentAddressed","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivation__darwinallowlocalnetworking","title":"# pip.overrides.&lt;name&gt;.mkDerivation.__darwinAllowLocalNetworking","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivation__impurehostdeps","title":"# pip.overrides.&lt;name&gt;.mkDerivation.__impureHostDeps","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivation__propagatedimpurehostdeps","title":"# pip.overrides.&lt;name&gt;.mkDerivation.__propagatedImpureHostDeps","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivation__structuredattrs","title":"# pip.overrides.&lt;name&gt;.mkDerivation.__structuredAttrs","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationallowsubstitutes","title":"# pip.overrides.&lt;name&gt;.mkDerivation.allowSubstitutes","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationallowedreferences","title":"# pip.overrides.&lt;name&gt;.mkDerivation.allowedReferences","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationallowedrequisites","title":"# pip.overrides.&lt;name&gt;.mkDerivation.allowedRequisites","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationargs","title":"# pip.overrides.&lt;name&gt;.mkDerivation.args","text":"type null or (list of (string or path))  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationbuildflags","title":"# pip.overrides.&lt;name&gt;.mkDerivation.buildFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationbuildinputs","title":"# pip.overrides.&lt;name&gt;.mkDerivation.buildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationbuildphase","title":"# pip.overrides.&lt;name&gt;.mkDerivation.buildPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationbuilder","title":"# pip.overrides.&lt;name&gt;.mkDerivation.builder","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationcheckflags","title":"# pip.overrides.&lt;name&gt;.mkDerivation.checkFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationcheckinputs","title":"# pip.overrides.&lt;name&gt;.mkDerivation.checkInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationcheckphase","title":"# pip.overrides.&lt;name&gt;.mkDerivation.checkPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationchecktarget","title":"# pip.overrides.&lt;name&gt;.mkDerivation.checkTarget","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationcmakeflags","title":"# pip.overrides.&lt;name&gt;.mkDerivation.cmakeFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationconfigureflags","title":"# pip.overrides.&lt;name&gt;.mkDerivation.configureFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationconfigurephase","title":"# pip.overrides.&lt;name&gt;.mkDerivation.configurePhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationconfigureplatforms","title":"# pip.overrides.&lt;name&gt;.mkDerivation.configurePlatforms","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationconfigurescript","title":"# pip.overrides.&lt;name&gt;.mkDerivation.configureScript","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdepsbuildbuild","title":"# pip.overrides.&lt;name&gt;.mkDerivation.depsBuildBuild","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdepsbuildbuildpropagated","title":"# pip.overrides.&lt;name&gt;.mkDerivation.depsBuildBuildPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdepsbuildtarget","title":"# pip.overrides.&lt;name&gt;.mkDerivation.depsBuildTarget","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdepsbuildtargetpropagated","title":"# pip.overrides.&lt;name&gt;.mkDerivation.depsBuildTargetPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdepshosthost","title":"# pip.overrides.&lt;name&gt;.mkDerivation.depsHostHost","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdepshosthostpropagated","title":"# pip.overrides.&lt;name&gt;.mkDerivation.depsHostHostPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdepstargettarget","title":"# pip.overrides.&lt;name&gt;.mkDerivation.depsTargetTarget","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdepstargettargetpropagated","title":"# pip.overrides.&lt;name&gt;.mkDerivation.depsTargetTargetPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdisallowedreferences","title":"# pip.overrides.&lt;name&gt;.mkDerivation.disallowedReferences","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdisallowedrequisites","title":"# pip.overrides.&lt;name&gt;.mkDerivation.disallowedRequisites","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdistflags","title":"# pip.overrides.&lt;name&gt;.mkDerivation.distFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdistphase","title":"# pip.overrides.&lt;name&gt;.mkDerivation.distPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdisttarget","title":"# pip.overrides.&lt;name&gt;.mkDerivation.distTarget","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdocheck","title":"# pip.overrides.&lt;name&gt;.mkDerivation.doCheck","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdodist","title":"# pip.overrides.&lt;name&gt;.mkDerivation.doDist","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdoinstallcheck","title":"# pip.overrides.&lt;name&gt;.mkDerivation.doInstallCheck","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontadddisabledeptrack","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontAddDisableDepTrack","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontaddprefix","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontAddPrefix","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontaddstaticconfigureflags","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontAddStaticConfigureFlags","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontbuild","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontBuild","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontconfigure","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontConfigure","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontcopydist","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontCopyDist","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontdisablestatic","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontDisableStatic","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontfixlibtool","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontFixLibtool","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontfixup","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontFixup","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontinstall","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontInstall","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontmakesourceswritable","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontMakeSourcesWritable","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontmovebin","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontMoveBin","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontpatch","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontPatch","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontpatchelf","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontPatchELF","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontpatchshebangs","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontPatchShebangs","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontprunelibtoolfiles","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontPruneLibtoolFiles","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontstrip","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontStrip","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontstriphost","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontStripHost","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontstriptarget","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontStripTarget","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationdontunpack","title":"# pip.overrides.&lt;name&gt;.mkDerivation.dontUnpack","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationenableparallelbuilding","title":"# pip.overrides.&lt;name&gt;.mkDerivation.enableParallelBuilding","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationenableparallelchecking","title":"# pip.overrides.&lt;name&gt;.mkDerivation.enableParallelChecking","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationexportreferencegraph","title":"# pip.overrides.&lt;name&gt;.mkDerivation.exportReferenceGraph","text":"type null or (list of (string or package))  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationfixupphase","title":"# pip.overrides.&lt;name&gt;.mkDerivation.fixupPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationforceshare","title":"# pip.overrides.&lt;name&gt;.mkDerivation.forceShare","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationhardeningdisable","title":"# pip.overrides.&lt;name&gt;.mkDerivation.hardeningDisable","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationhardeningenable","title":"# pip.overrides.&lt;name&gt;.mkDerivation.hardeningEnable","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationimpureenvvars","title":"# pip.overrides.&lt;name&gt;.mkDerivation.impureEnvVars","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationinstallcheckflags","title":"# pip.overrides.&lt;name&gt;.mkDerivation.installCheckFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationinstallcheckinputs","title":"# pip.overrides.&lt;name&gt;.mkDerivation.installCheckInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationinstallcheckphase","title":"# pip.overrides.&lt;name&gt;.mkDerivation.installCheckPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationinstallchecktarget","title":"# pip.overrides.&lt;name&gt;.mkDerivation.installCheckTarget","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationinstallflags","title":"# pip.overrides.&lt;name&gt;.mkDerivation.installFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationinstallphase","title":"# pip.overrides.&lt;name&gt;.mkDerivation.installPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationinstalltargets","title":"# pip.overrides.&lt;name&gt;.mkDerivation.installTargets","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationmakeflags","title":"# pip.overrides.&lt;name&gt;.mkDerivation.makeFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationmakefile","title":"# pip.overrides.&lt;name&gt;.mkDerivation.makefile","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationmesonflags","title":"# pip.overrides.&lt;name&gt;.mkDerivation.mesonFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationmeta","title":"# pip.overrides.&lt;name&gt;.mkDerivation.meta","text":"type null or (attribute set)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationnativebuildinputs","title":"# pip.overrides.&lt;name&gt;.mkDerivation.nativeBuildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationnativecheckinputs","title":"# pip.overrides.&lt;name&gt;.mkDerivation.nativeCheckInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationoutputhash","title":"# pip.overrides.&lt;name&gt;.mkDerivation.outputHash","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationoutputhashalgo","title":"# pip.overrides.&lt;name&gt;.mkDerivation.outputHashAlgo","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationoutputhashmode","title":"# pip.overrides.&lt;name&gt;.mkDerivation.outputHashMode","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationoutputs","title":"# pip.overrides.&lt;name&gt;.mkDerivation.outputs","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>[\n  \"out\"\n]\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpassasfile","title":"# pip.overrides.&lt;name&gt;.mkDerivation.passAsFile","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpassthru","title":"# pip.overrides.&lt;name&gt;.mkDerivation.passthru","text":"type null or (attribute set)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpatchflags","title":"# pip.overrides.&lt;name&gt;.mkDerivation.patchFlags","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpatchphase","title":"# pip.overrides.&lt;name&gt;.mkDerivation.patchPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpatches","title":"# pip.overrides.&lt;name&gt;.mkDerivation.patches","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationphases","title":"# pip.overrides.&lt;name&gt;.mkDerivation.phases","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpos","title":"# pip.overrides.&lt;name&gt;.mkDerivation.pos","text":"type null or (attribute set)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpostbuild","title":"# pip.overrides.&lt;name&gt;.mkDerivation.postBuild","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpostcheck","title":"# pip.overrides.&lt;name&gt;.mkDerivation.postCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpostconfigure","title":"# pip.overrides.&lt;name&gt;.mkDerivation.postConfigure","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpostdist","title":"# pip.overrides.&lt;name&gt;.mkDerivation.postDist","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpostfixup","title":"# pip.overrides.&lt;name&gt;.mkDerivation.postFixup","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpostinstalcheck","title":"# pip.overrides.&lt;name&gt;.mkDerivation.postInstalCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpostinstall","title":"# pip.overrides.&lt;name&gt;.mkDerivation.postInstall","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpostpatch","title":"# pip.overrides.&lt;name&gt;.mkDerivation.postPatch","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpostphases","title":"# pip.overrides.&lt;name&gt;.mkDerivation.postPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpostunpack","title":"# pip.overrides.&lt;name&gt;.mkDerivation.postUnpack","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationprebuild","title":"# pip.overrides.&lt;name&gt;.mkDerivation.preBuild","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationprebuildphases","title":"# pip.overrides.&lt;name&gt;.mkDerivation.preBuildPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationprecheck","title":"# pip.overrides.&lt;name&gt;.mkDerivation.preCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpreconfigure","title":"# pip.overrides.&lt;name&gt;.mkDerivation.preConfigure","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpreconfigurephases","title":"# pip.overrides.&lt;name&gt;.mkDerivation.preConfigurePhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpredist","title":"# pip.overrides.&lt;name&gt;.mkDerivation.preDist","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpredistphases","title":"# pip.overrides.&lt;name&gt;.mkDerivation.preDistPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationprefixup","title":"# pip.overrides.&lt;name&gt;.mkDerivation.preFixup","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationprefixupphases","title":"# pip.overrides.&lt;name&gt;.mkDerivation.preFixupPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpreinstall","title":"# pip.overrides.&lt;name&gt;.mkDerivation.preInstall","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpreinstallcheck","title":"# pip.overrides.&lt;name&gt;.mkDerivation.preInstallCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpreinstallphases","title":"# pip.overrides.&lt;name&gt;.mkDerivation.preInstallPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationprepatch","title":"# pip.overrides.&lt;name&gt;.mkDerivation.prePatch","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationprephases","title":"# pip.overrides.&lt;name&gt;.mkDerivation.prePhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpreunpack","title":"# pip.overrides.&lt;name&gt;.mkDerivation.preUnpack","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpreferlocalbuild","title":"# pip.overrides.&lt;name&gt;.mkDerivation.preferLocalBuild","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationprefix","title":"# pip.overrides.&lt;name&gt;.mkDerivation.prefix","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationprefixkey","title":"# pip.overrides.&lt;name&gt;.mkDerivation.prefixKey","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpropagatedbuildinputs","title":"# pip.overrides.&lt;name&gt;.mkDerivation.propagatedBuildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpropagatednativebuildinputs","title":"# pip.overrides.&lt;name&gt;.mkDerivation.propagatedNativeBuildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationpropagatedsandboxprofile","title":"# pip.overrides.&lt;name&gt;.mkDerivation.propagatedSandboxProfile","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationrealbuilder","title":"# pip.overrides.&lt;name&gt;.mkDerivation.realBuilder","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationrequiredsystemfeatures","title":"# pip.overrides.&lt;name&gt;.mkDerivation.requiredSystemFeatures","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationsandboxprofile","title":"# pip.overrides.&lt;name&gt;.mkDerivation.sandboxProfile","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationseparatedebuginfo","title":"# pip.overrides.&lt;name&gt;.mkDerivation.separateDebugInfo","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationsetsourceroot","title":"# pip.overrides.&lt;name&gt;.mkDerivation.setSourceRoot","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationsetuphook","title":"# pip.overrides.&lt;name&gt;.mkDerivation.setupHook","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationshellhook","title":"# pip.overrides.&lt;name&gt;.mkDerivation.shellHook","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationsourceroot","title":"# pip.overrides.&lt;name&gt;.mkDerivation.sourceRoot","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationsrc","title":"# pip.overrides.&lt;name&gt;.mkDerivation.src","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationsrcs","title":"# pip.overrides.&lt;name&gt;.mkDerivation.srcs","text":"type null or (list of (string or path or package))  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationstrictdeps","title":"# pip.overrides.&lt;name&gt;.mkDerivation.strictDeps","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationstripallflags","title":"# pip.overrides.&lt;name&gt;.mkDerivation.stripAllFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationstripalllist","title":"# pip.overrides.&lt;name&gt;.mkDerivation.stripAllList","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationstripdebugflags","title":"# pip.overrides.&lt;name&gt;.mkDerivation.stripDebugFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationstripdebuglist","title":"# pip.overrides.&lt;name&gt;.mkDerivation.stripDebugList","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationtarballs","title":"# pip.overrides.&lt;name&gt;.mkDerivation.tarballs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationunpackcmd","title":"# pip.overrides.&lt;name&gt;.mkDerivation.unpackCmd","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationunpackphase","title":"# pip.overrides.&lt;name&gt;.mkDerivation.unpackPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamemkderivationversion","title":"# pip.overrides.&lt;name&gt;.mkDerivation.version","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#pipoverridesnamename","title":"pip.overrides.&lt;name&gt;.name","text":"<p>The name of the package</p> type string  source dream2nix/modules/dream2nix/core/ui/interface.nix"},{"location":"reference/pip/#pipoverridesnamepublic","title":"pip.overrides.&lt;name&gt;.public","text":"<p>The final result of the evaluated package. Contains everything that nix expects from a derivation. Contains fields like name, outputs, drvPath, outPath, etc. Can be build with nix-build or <code>nix build</code>.</p> type lazy attribute set of anything  source dream2nix/modules/dream2nix/core/public/interface.nix"},{"location":"reference/pip/#pipoverridesnameversion","title":"pip.overrides.&lt;name&gt;.version","text":"<p>The version of the package</p> type string  source dream2nix/modules/dream2nix/core/ui/interface.nix"},{"location":"reference/pip/#pippipflags","title":"pip.pipFlags","text":"<p>list of flags for pip install</p> type list of string  source dream2nix/modules/dream2nix/pip/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#pippipversion","title":"pip.pipVersion","text":"<p>pip version to use to generate the report</p> type string  source dream2nix/modules/dream2nix/pip/interface.nix default <pre>\"23.1\"\n</pre>"},{"location":"reference/pip/#pippypisnapshotdate","title":"pip.pypiSnapshotDate","text":"<p>maximum release date for packages Choose any date from the past.</p> type null or string  source dream2nix/modules/dream2nix/pip/interface.nix default <pre>null\n</pre> example <pre>\"2023-01-01\"\n</pre>"},{"location":"reference/pip/#piprequirementsfiles","title":"pip.requirementsFiles","text":"<p>list of requirements.txt files</p> type list of string  source dream2nix/modules/dream2nix/pip/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#piprequirementslist","title":"pip.requirementsList","text":"<p>list of strings of requirements.txt entries</p> type list of string  source dream2nix/modules/dream2nix/pip/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#env","title":"env","text":"<p>environment variables passed to the build environment</p> type attribute set of (null or boolean or signed integer or string or path or package or list of (boolean or signed integer or string or path or package))  source dream2nix/modules/dream2nix/core/env default <pre>{ }\n</pre>"},{"location":"reference/pip/#name_1","title":"name","text":"<p>The name of the package</p> type string  source dream2nix/modules/dream2nix/core/ui/interface.nix"},{"location":"reference/pip/#version","title":"version","text":"<p>The version of the package</p> type string  source dream2nix/modules/dream2nix/core/ui/interface.nix"},{"location":"reference/pip/#buildpythonpackage_2","title":"buildPythonPackage","text":""},{"location":"reference/pip/#buildpythonpackagebuild-system","title":"buildPythonPackage.build-system","text":"<p>Build-time only Python dependencies. Items listed in <code>build-system.requires</code>/<code>setup_requires</code>.</p> type list of (string or path or package)  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#buildpythonpackagecatchconflicts","title":"buildPythonPackage.catchConflicts","text":"<p>Raise an error if two packages are installed with the same name TODO: For cross we probably need a different PYTHONPATH, or not add the runtime deps until after buildPhase.</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>''\n  true if the host and build platforms are the same, false otherwise.\n''\n</pre>"},{"location":"reference/pip/#buildpythonpackagedependencies","title":"buildPythonPackage.dependencies","text":"<p>List of runtime python dependencies. Aside from propagating dependencies, <code>buildPythonPackage</code> also injects code into and wraps executables with the paths included in this list. Items listed in <code>install_requires</code> go here.</p> type list of (string or path or package)  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#buildpythonpackagedisabled","title":"buildPythonPackage.disabled","text":"<p>used to disable derivation, useful for specific python versions</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>false\n</pre>"},{"location":"reference/pip/#buildpythonpackagedisabledtestpaths","title":"buildPythonPackage.disabledTestPaths","text":"<p>Test paths to ignore in checkPhase</p> type list of anything  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#buildpythonpackagedisabledtests","title":"buildPythonPackage.disabledTests","text":"<p>Disable running specific unit tests</p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#buildpythonpackagedontusepipinstall","title":"buildPythonPackage.dontUsePipInstall","text":"<p>Don't use Pip to install a wheel Note this is actually a variable for the pipInstallPhase in pip's setupHook. It's included here to prevent an infinite recursion.</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>false\n</pre>"},{"location":"reference/pip/#buildpythonpackagedontwrappythonprograms","title":"buildPythonPackage.dontWrapPythonPrograms","text":"<p>Skip wrapping of python programs altogether</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>false\n</pre>"},{"location":"reference/pip/#buildpythonpackageformat","title":"buildPythonPackage.format","text":"<p>Several package formats are supported:   <code>null</code>: Disable this legacy option and use the new <code>pyproject</code> option instead.   \"setuptools\" : Install a common setuptools/distutils based package. This builds a wheel.   \"wheel\" : Install from a pre-compiled wheel.   \"flit\" : Install a flit package. This builds a wheel.   \"pyproject\": Install a package using a <code>pyproject.toml</code> file (PEP517). This builds a wheel.   \"egg\": Install a package from an egg.   \"other\" : Provide your own buildPhase and installPhase.</p> type null or string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>\"setuptools\"\n</pre>"},{"location":"reference/pip/#buildpythonpackagemakewrapperargs","title":"buildPythonPackage.makeWrapperArgs","text":"<p>Additional arguments to pass to the makeWrapper function, which wraps generated binaries.</p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#buildpythonpackageoptional-dependencies","title":"buildPythonPackage.optional-dependencies","text":"<p>Optional feature flagged dependencies. Items listed in <code>extras_requires</code> go here.</p> type attribute set of (string or path or package)  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/pip/#buildpythonpackagepermitusersite","title":"buildPythonPackage.permitUserSite","text":"<p>Skip setting the PYTHONNOUSERSITE environment variable in wrapped programs</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>false\n</pre>"},{"location":"reference/pip/#buildpythonpackagepipinstallflags","title":"buildPythonPackage.pipInstallFlags","text":"<p>Extra flags passed to <code>pip install</code></p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#buildpythonpackagepyproject","title":"buildPythonPackage.pyproject","text":"<p>Whether the pyproject format should be used. When set to <code>true</code>, <code>pypaBuildHook</code> will be used, and you can add the required build dependencies from <code>build-system.requires</code> to <code>build-system</code>.</p> <p>Note that the pyproject format falls back to using <code>setuptools</code>, so you can use <code>pyproject = true</code> even if the package only has a <code>setup.py</code>. When set to <code>false</code>, you can use the existing hooks or provide your own logic to build the package. This can be useful for packages that don't support the pyproject format.</p> <p>When unset, the legacy <code>setuptools</code> hooks are used for backwards compatibility.</p> type null or boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#buildpythonpackagepytestflagsarray","title":"buildPythonPackage.pytestFlagsArray","text":"<p>Extra flags passed to pytest</p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#buildpythonpackagepythonimportscheck","title":"buildPythonPackage.pythonImportsCheck","text":"<p>Check whether importing the listed modules works</p> type list of string  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#buildpythonpackageremovebinbytecode","title":"buildPythonPackage.removeBinBytecode","text":"<p>Remove bytecode from bin folder. When a Python script has the extension <code>.py</code>, bytecode is generated Typically, executables in bin have no extension, so no bytecode is generated. However, some packages do provide executables with extensions, and thus bytecode is generated.</p> type boolean  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix default <pre>true\n</pre>"},{"location":"reference/pip/#deps","title":"deps","text":"<p>All dependencies of the package. This option should be set by the \"outer world\" and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p> <p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable. Nothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p> <p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p> type lazy attribute set of raw value  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix, dream2nix/modules/dream2nix/core/deps, dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>{ }\n</pre> example <pre>{nixpkgs, ...}: {\n  inherit (nixpkgs) stdenv;\n  inherit (nixpkgs.haskellPackages) pandoc;\n}\n</pre>"},{"location":"reference/pip/#depspython","title":"deps.python","text":"<p>The python interpreter package to use</p> type package  source dream2nix/modules/dream2nix/buildPythonPackage/interface.nix"},{"location":"reference/pip/#depsstdenv","title":"deps.stdenv","text":"<p>The stdenv used for building this package</p> type raw value  source dream2nix/modules/dream2nix/mkDerivation/interface.nix"},{"location":"reference/pip/#lock","title":"lock","text":""},{"location":"reference/pip/#lockcontent","title":"lock.content","text":"<p>The content of the lock file. All fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p> type anything  source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/pip/#lockextrascripts","title":"lock.extraScripts","text":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p> <p>This allows adding custom logic to the lock file generation.</p> type list of path  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip/#lockfields","title":"lock.fields","text":"<p>Fields of the lock file</p> type attribute set of (submodule)  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>{ }\n</pre> example <pre>{\n  pname = true;\n  version = true;\n}\n</pre>"},{"location":"reference/pip/#name_2","title":"&lt;name&gt;","text":""},{"location":"reference/pip/#lockfieldsnamedefault","title":"lock.fields.&lt;name&gt;.default","text":"<p>The default value in case the lock file doesn't exist or doesn't yet contain the field.</p> type null or anything  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#lockfieldsnamescript","title":"lock.fields.&lt;name&gt;.script","text":"<p>A script to refresh the value of this lock file field. The script should write the result as json file to $out.</p> type path  source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/pip/#lockinvalidationdata","title":"lock.invalidationData","text":"<p>Pass any data that should invalidate the lock file when changed. This is useful for example when the lock file should be regenerated when the requirements change.</p> type anything  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>{ }\n</pre> example <pre>{\n  pip = {\n    lockVersion = \"2\";\n    requirements = [\n      \"requests\"\n      \"pillow\"\n    ];\n  };\n}\n</pre>"},{"location":"reference/pip/#lib","title":"lib","text":""},{"location":"reference/pip/#locklibcomputefodhash","title":"lock.lib.computeFODHash","text":"<p>Helper function to write the hash of a given FOD to $out.</p> type function that evaluates to a(n) path (read only) source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/pip/#lockrefresh","title":"lock.refresh","text":"<p>Script to refresh the lock file</p> type package (read only) source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/pip/#mkderivation_2","title":"mkDerivation","text":""},{"location":"reference/pip/#mkderivation__contentaddressed","title":"mkDerivation.__contentAddressed","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivation__darwinallowlocalnetworking","title":"mkDerivation.__darwinAllowLocalNetworking","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivation__impurehostdeps","title":"mkDerivation.__impureHostDeps","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivation__propagatedimpurehostdeps","title":"mkDerivation.__propagatedImpureHostDeps","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivation__structuredattrs","title":"mkDerivation.__structuredAttrs","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationallowsubstitutes","title":"mkDerivation.allowSubstitutes","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationallowedreferences","title":"mkDerivation.allowedReferences","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationallowedrequisites","title":"mkDerivation.allowedRequisites","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationargs","title":"mkDerivation.args","text":"type null or (list of (string or path))  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationbuildflags","title":"mkDerivation.buildFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationbuildinputs","title":"mkDerivation.buildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationbuildphase","title":"mkDerivation.buildPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationbuilder","title":"mkDerivation.builder","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationcheckflags","title":"mkDerivation.checkFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationcheckinputs","title":"mkDerivation.checkInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationcheckphase","title":"mkDerivation.checkPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationchecktarget","title":"mkDerivation.checkTarget","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationcmakeflags","title":"mkDerivation.cmakeFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationconfigureflags","title":"mkDerivation.configureFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationconfigurephase","title":"mkDerivation.configurePhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationconfigureplatforms","title":"mkDerivation.configurePlatforms","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationconfigurescript","title":"mkDerivation.configureScript","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdepsbuildbuild","title":"mkDerivation.depsBuildBuild","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdepsbuildbuildpropagated","title":"mkDerivation.depsBuildBuildPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdepsbuildtarget","title":"mkDerivation.depsBuildTarget","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdepsbuildtargetpropagated","title":"mkDerivation.depsBuildTargetPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdepshosthost","title":"mkDerivation.depsHostHost","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdepshosthostpropagated","title":"mkDerivation.depsHostHostPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdepstargettarget","title":"mkDerivation.depsTargetTarget","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdepstargettargetpropagated","title":"mkDerivation.depsTargetTargetPropagated","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdisallowedreferences","title":"mkDerivation.disallowedReferences","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdisallowedrequisites","title":"mkDerivation.disallowedRequisites","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdistflags","title":"mkDerivation.distFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdistphase","title":"mkDerivation.distPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdisttarget","title":"mkDerivation.distTarget","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdocheck","title":"mkDerivation.doCheck","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdodist","title":"mkDerivation.doDist","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdoinstallcheck","title":"mkDerivation.doInstallCheck","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontadddisabledeptrack","title":"mkDerivation.dontAddDisableDepTrack","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontaddprefix","title":"mkDerivation.dontAddPrefix","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontaddstaticconfigureflags","title":"mkDerivation.dontAddStaticConfigureFlags","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontbuild","title":"mkDerivation.dontBuild","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontconfigure","title":"mkDerivation.dontConfigure","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontcopydist","title":"mkDerivation.dontCopyDist","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontdisablestatic","title":"mkDerivation.dontDisableStatic","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontfixlibtool","title":"mkDerivation.dontFixLibtool","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontfixup","title":"mkDerivation.dontFixup","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontinstall","title":"mkDerivation.dontInstall","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontmakesourceswritable","title":"mkDerivation.dontMakeSourcesWritable","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontmovebin","title":"mkDerivation.dontMoveBin","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontpatch","title":"mkDerivation.dontPatch","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontpatchelf","title":"mkDerivation.dontPatchELF","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontpatchshebangs","title":"mkDerivation.dontPatchShebangs","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontprunelibtoolfiles","title":"mkDerivation.dontPruneLibtoolFiles","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontstrip","title":"mkDerivation.dontStrip","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontstriphost","title":"mkDerivation.dontStripHost","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontstriptarget","title":"mkDerivation.dontStripTarget","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationdontunpack","title":"mkDerivation.dontUnpack","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationenableparallelbuilding","title":"mkDerivation.enableParallelBuilding","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationenableparallelchecking","title":"mkDerivation.enableParallelChecking","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationexportreferencegraph","title":"mkDerivation.exportReferenceGraph","text":"type null or (list of (string or package))  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationfixupphase","title":"mkDerivation.fixupPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationforceshare","title":"mkDerivation.forceShare","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationhardeningdisable","title":"mkDerivation.hardeningDisable","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationhardeningenable","title":"mkDerivation.hardeningEnable","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationimpureenvvars","title":"mkDerivation.impureEnvVars","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationinstallcheckflags","title":"mkDerivation.installCheckFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationinstallcheckinputs","title":"mkDerivation.installCheckInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationinstallcheckphase","title":"mkDerivation.installCheckPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationinstallchecktarget","title":"mkDerivation.installCheckTarget","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationinstallflags","title":"mkDerivation.installFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationinstallphase","title":"mkDerivation.installPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationinstalltargets","title":"mkDerivation.installTargets","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationmakeflags","title":"mkDerivation.makeFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationmakefile","title":"mkDerivation.makefile","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationmesonflags","title":"mkDerivation.mesonFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationmeta","title":"mkDerivation.meta","text":"type null or (attribute set)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/pip/#mkderivationnativebuildinputs","title":"mkDerivation.nativeBuildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationnativecheckinputs","title":"mkDerivation.nativeCheckInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationoutputhash","title":"mkDerivation.outputHash","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationoutputhashalgo","title":"mkDerivation.outputHashAlgo","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationoutputhashmode","title":"mkDerivation.outputHashMode","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationoutputs","title":"mkDerivation.outputs","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>[\n  \"out\"\n]\n</pre>"},{"location":"reference/pip/#mkderivationpassasfile","title":"mkDerivation.passAsFile","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpassthru","title":"mkDerivation.passthru","text":"type null or (attribute set)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/pip/#mkderivationpatchflags","title":"mkDerivation.patchFlags","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpatchphase","title":"mkDerivation.patchPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpatches","title":"mkDerivation.patches","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationphases","title":"mkDerivation.phases","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpos","title":"mkDerivation.pos","text":"type null or (attribute set)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>{ }\n</pre>"},{"location":"reference/pip/#mkderivationpostbuild","title":"mkDerivation.postBuild","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpostcheck","title":"mkDerivation.postCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpostconfigure","title":"mkDerivation.postConfigure","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpostdist","title":"mkDerivation.postDist","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpostfixup","title":"mkDerivation.postFixup","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpostinstalcheck","title":"mkDerivation.postInstalCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpostinstall","title":"mkDerivation.postInstall","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpostpatch","title":"mkDerivation.postPatch","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpostphases","title":"mkDerivation.postPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpostunpack","title":"mkDerivation.postUnpack","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationprebuild","title":"mkDerivation.preBuild","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationprebuildphases","title":"mkDerivation.preBuildPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationprecheck","title":"mkDerivation.preCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpreconfigure","title":"mkDerivation.preConfigure","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpreconfigurephases","title":"mkDerivation.preConfigurePhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpredist","title":"mkDerivation.preDist","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpredistphases","title":"mkDerivation.preDistPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationprefixup","title":"mkDerivation.preFixup","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationprefixupphases","title":"mkDerivation.preFixupPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpreinstall","title":"mkDerivation.preInstall","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpreinstallcheck","title":"mkDerivation.preInstallCheck","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpreinstallphases","title":"mkDerivation.preInstallPhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationprepatch","title":"mkDerivation.prePatch","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationprephases","title":"mkDerivation.prePhases","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpreunpack","title":"mkDerivation.preUnpack","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpreferlocalbuild","title":"mkDerivation.preferLocalBuild","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationprefix","title":"mkDerivation.prefix","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationprefixkey","title":"mkDerivation.prefixKey","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpropagatedbuildinputs","title":"mkDerivation.propagatedBuildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpropagatednativebuildinputs","title":"mkDerivation.propagatedNativeBuildInputs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationpropagatedsandboxprofile","title":"mkDerivation.propagatedSandboxProfile","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationrealbuilder","title":"mkDerivation.realBuilder","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationrequiredsystemfeatures","title":"mkDerivation.requiredSystemFeatures","text":"type null or (list of string)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationsandboxprofile","title":"mkDerivation.sandboxProfile","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationseparatedebuginfo","title":"mkDerivation.separateDebugInfo","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationsetsourceroot","title":"mkDerivation.setSourceRoot","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationsetuphook","title":"mkDerivation.setupHook","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationshellhook","title":"mkDerivation.shellHook","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationsourceroot","title":"mkDerivation.sourceRoot","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationsrc","title":"mkDerivation.src","text":"type null or string or path or package or (submodule)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationsrcs","title":"mkDerivation.srcs","text":"type null or (list of (string or path or package))  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationstrictdeps","title":"mkDerivation.strictDeps","text":"type null or boolean  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationstripallflags","title":"mkDerivation.stripAllFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationstripalllist","title":"mkDerivation.stripAllList","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationstripdebugflags","title":"mkDerivation.stripDebugFlags","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationstripdebuglist","title":"mkDerivation.stripDebugList","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationtarballs","title":"mkDerivation.tarballs","text":"type null or (list of anything)  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationunpackcmd","title":"mkDerivation.unpackCmd","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationunpackphase","title":"mkDerivation.unpackPhase","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#mkderivationversion","title":"mkDerivation.version","text":"type null or string  source dream2nix/modules/dream2nix/mkDerivation/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip/#paths","title":"paths","text":""},{"location":"reference/pip/#pathscachefile","title":"paths.cacheFile","text":"<p>Path to the eval cache file of the current package. Relative to \"${paths.projectRoot}/${paths.package}\"\".</p> type string  source dream2nix/modules/dream2nix/core/paths/interface.nix default <pre>\"cache.json\"\n</pre>"},{"location":"reference/pip/#pathslockfile","title":"paths.lockFile","text":"<p>Path to the lock file of the current package. Relative to \"${paths.projectRoot}/${paths.package}\"\".</p> type string  source dream2nix/modules/dream2nix/core/paths/interface.nix default <pre>\"lock.json\"\n</pre>"},{"location":"reference/pip/#pathspackage","title":"paths.package","text":"<p>Path to the directory containing the definition of the current package. Relative to 'paths.projectRoot'.</p> <p>This helps locating package definitions for lock &amp; update scripts.</p> type path or string  source dream2nix/modules/dream2nix/core/paths/interface.nix"},{"location":"reference/pip/#pathsprojectroot","title":"paths.projectRoot","text":"<p>Path to the root of the project on which dream2nix operates. Must contain the marker file specified by 'paths.projectRootFile'</p> <p>This helps locating lock files at evaluation time.</p> type path  source dream2nix/modules/dream2nix/core/paths/interface.nix example <pre>./.\n</pre>"},{"location":"reference/pip/#pathsprojectrootfile","title":"paths.projectRootFile","text":"<p>File name to look for to determine the root of the project. Ensure 'paths.projectRoot' contains a file named like this.</p> <p>This helps locating package definitions for lock &amp; update scripts.</p> type string  source dream2nix/modules/dream2nix/core/paths/interface.nix default <pre>\".git\"\n</pre> example <pre>\".git\"\n</pre>"},{"location":"reference/pip/#public","title":"public","text":"<p>The final result of the evaluated package. Contains everything that nix expects from a derivation. Contains fields like name, outputs, drvPath, outPath, etc. Can be build with nix-build or <code>nix build</code>.</p> type lazy attribute set of anything  source dream2nix/modules/dream2nix/core/public/interface.nix, dream2nix/modules/dream2nix/core/docs"},{"location":"reference/pip/#publicdocs","title":"public.docs","text":"<p>The manual of the package as a website</p> type package (read only) source dream2nix/modules/dream2nix/core/docs"},{"location":"reference/pip-uv/","title":"pip-uv","text":"state: released maintainers: @YorickvP"},{"location":"reference/pip-uv/#introduction","title":"Introduction","text":"<p>We use <code>uv</code> to resolve python dependencies instead of <code>pip</code>. This is faster and has slightly more features.</p>"},{"location":"reference/pip-uv/#options","title":"Options","text":""},{"location":"reference/pip-uv/#deps","title":"deps","text":"<p>All dependencies of the package. This option should be set by the \"outer world\" and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p> <p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable. Nothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p> <p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p> type lazy attribute set of raw value  source dream2nix/modules/dream2nix/core/deps default <pre>{ }\n</pre> example <pre>{nixpkgs, ...}: {\n  inherit (nixpkgs) stdenv;\n  inherit (nixpkgs.haskellPackages) pandoc;\n}\n</pre>"},{"location":"reference/pip-uv/#lock","title":"lock","text":""},{"location":"reference/pip-uv/#lockcontent","title":"lock.content","text":"<p>The content of the lock file. All fields declared via <code>lock.fields</code> are contained pointing to their respective values.</p> type anything  source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/pip-uv/#lockextrascripts","title":"lock.extraScripts","text":"<p>Extra shell scripts to execute when <code>nix run .#{package}.lock</code> is called.</p> <p>This allows adding custom logic to the lock file generation.</p> type list of path  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/pip-uv/#lockfields","title":"lock.fields","text":"<p>Fields of the lock file</p> type attribute set of (submodule)  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>{ }\n</pre> example <pre>{\n  pname = true;\n  version = true;\n}\n</pre>"},{"location":"reference/pip-uv/#name","title":"&lt;name&gt;","text":""},{"location":"reference/pip-uv/#lockfieldsnamedefault","title":"lock.fields.&lt;name&gt;.default","text":"<p>The default value in case the lock file doesn't exist or doesn't yet contain the field.</p> type null or anything  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>null\n</pre>"},{"location":"reference/pip-uv/#lockfieldsnamescript","title":"lock.fields.&lt;name&gt;.script","text":"<p>A script to refresh the value of this lock file field. The script should write the result as json file to $out.</p> type path  source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/pip-uv/#lockinvalidationdata","title":"lock.invalidationData","text":"<p>Pass any data that should invalidate the lock file when changed. This is useful for example when the lock file should be regenerated when the requirements change.</p> type anything  source dream2nix/modules/dream2nix/core/lock/interface.nix default <pre>{ }\n</pre> example <pre>{\n  pip = {\n    lockVersion = \"2\";\n    requirements = [\n      \"requests\"\n      \"pillow\"\n    ];\n  };\n}\n</pre>"},{"location":"reference/pip-uv/#lib","title":"lib","text":""},{"location":"reference/pip-uv/#locklibcomputefodhash","title":"lock.lib.computeFODHash","text":"<p>Helper function to write the hash of a given FOD to $out.</p> type function that evaluates to a(n) path (read only) source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/pip-uv/#lockrefresh","title":"lock.refresh","text":"<p>Script to refresh the lock file</p> type package (read only) source dream2nix/modules/dream2nix/core/lock/interface.nix"},{"location":"reference/pip-uv/#pip","title":"pip","text":""},{"location":"reference/pip-uv/#pipconstraintslist","title":"pip.constraintsList","text":"<p>Constrain versions using the given requirements.</p> <p>Constraints are <code>requirements.txt</code>-like entries that only control the version of a requirement that's installed. However, including a package in constraints will not trigger the installation of that package.</p> type list of string  source cognix/modules/pip-uv default <pre>[ ]\n</pre>"},{"location":"reference/pip-uv/#pipoverrideslist","title":"pip.overridesList","text":"<p>Override versions using the given requirements files.</p> <p>Overrides specify a specific version of a requirement to be installed, regardless of the requirements declared by any constituent package, and regardless of whether this would be considered an invalid resolution.</p> <p>While constraints are additive, in that they're combined with the requirements of the constituent packages, overrides are absolute, in that they completely replace the requirements of the constituent packages.</p> type list of string  source cognix/modules/pip-uv default <pre>[ ]\n</pre>"},{"location":"reference/pip-uv/#uv","title":"uv","text":""},{"location":"reference/pip-uv/#pipuvenable","title":"pip.uv.enable","text":"<p>use uv solver</p> type boolean  source cognix/modules/pip-uv default <pre>true\n</pre>"},{"location":"reference/pip-uv/#pipuvextraargs","title":"pip.uv.extraArgs","text":"<p>Extra arguments to pass the the <code>uv</code> solver.</p> type list of string  source cognix/modules/pip-uv default <pre>[ ]\n</pre>"},{"location":"reference/stream-layered-image/","title":"dockerTools.streamLayeredImage","text":"state: released maintainers: @YorickvP"},{"location":"reference/stream-layered-image/#introduction","title":"Introduction","text":""},{"location":"reference/stream-layered-image/#options","title":"Options","text":""},{"location":"reference/stream-layered-image/#deps","title":"deps","text":"<p>All dependencies of the package. This option should be set by the \"outer world\" and can be used to inherit attributes from <code>pkgs</code> or <code>inputs</code> etc.</p> <p>By separating the task of retrieving things from the outside world, it is ensured that the dependencies are overridable. Nothing will stop users from adding <code>nixpkgs</code> itself as a dependency, but this will make it very hard for the user of the package to override any dependencies, because they'd have to figure out a way to insert their changes into the Nixpkgs fixpoint. By adding specific attributes to <code>deps</code> instead, the user has a realistic chance of overriding those dependencies.</p> <p>So deps should be specific, but not overly specific. For instance, the caller shouldn't have to know the version of a dependency in order to override it. The name should suffice. (e.g. <code>nix = nixVersions.nix_2_12</code> instead of <code>inherit (nixVersions) nix_2_12</code>.</p> type lazy attribute set of raw value  source dream2nix/modules/dream2nix/core/deps default <pre>{ }\n</pre> example <pre>{nixpkgs, ...}: {\n  inherit (nixpkgs) stdenv;\n  inherit (nixpkgs.haskellPackages) pandoc;\n}\n</pre>"},{"location":"reference/stream-layered-image/#public","title":"public","text":"<p>The final result of the evaluated package. Contains everything that nix expects from a derivation. Contains fields like name, outputs, drvPath, outPath, etc. Can be build with nix-build or <code>nix build</code>.</p> type lazy attribute set of anything  source dream2nix/modules/dream2nix/core/public/interface.nix"},{"location":"reference/stream-layered-image/#dockertools","title":"dockerTools","text":""},{"location":"reference/stream-layered-image/#streamlayeredimage","title":"streamLayeredImage","text":""},{"location":"reference/stream-layered-image/#dockertoolsstreamlayeredimagearchitecture","title":"dockerTools.streamLayeredImage.architecture","text":"<p>Image architecture, defaults to the architecture of the <code>hostPlatform</code> when unset</p> type string  source cognix/modules/stream-layered-image default <pre>\"amd64\"\n</pre>"},{"location":"reference/stream-layered-image/#dockertoolsstreamlayeredimageconfig","title":"dockerTools.streamLayeredImage.config","text":"<p>Docker config; e.g. what command to run on the container.</p> type attribute set of anything  source cognix/modules/stream-layered-image default <pre>{ }\n</pre>"},{"location":"reference/stream-layered-image/#dockertoolsstreamlayeredimagecontents","title":"dockerTools.streamLayeredImage.contents","text":"<p>Files to put on the image (a nix store path or list of paths).</p> type list of package  source cognix/modules/stream-layered-image default <pre>[ ]\n</pre>"},{"location":"reference/stream-layered-image/#dockertoolsstreamlayeredimagecreated","title":"dockerTools.streamLayeredImage.created","text":"<p>Time of creation of the image. Passing \"now\" will make the created date be the time of building.</p> type string  source cognix/modules/stream-layered-image default <pre>\"1970-01-01T00:00:01Z\"\n</pre>"},{"location":"reference/stream-layered-image/#dockertoolsstreamlayeredimageenablefakechroot","title":"dockerTools.streamLayeredImage.enableFakechroot","text":"<p>Whether to run fakeRootCommands in fakechroot as well, so that they appear to run inside the image, but have access to the normal Nix store. Perhaps this could be enabled on by default on pkgs.stdenv.buildPlatform.isLinux</p> type boolean  source cognix/modules/stream-layered-image default <pre>false\n</pre>"},{"location":"reference/stream-layered-image/#dockertoolsstreamlayeredimageextracommands","title":"dockerTools.streamLayeredImage.extraCommands","text":"<p>Optional bash script to run on the files prior to fixturizing the layer.</p> type strings concatenated with \"\\n\"  source cognix/modules/stream-layered-image default <pre>\"\"\n</pre>"},{"location":"reference/stream-layered-image/#dockertoolsstreamlayeredimageextrajsonfile","title":"dockerTools.streamLayeredImage.extraJSONFile","text":"<p>JSON file that's merged into the stream configuration. Use this to add things only available at build time, such as other build results.</p> type path  source cognix/modules/stream-layered-image default <pre>\"/nix/store/6llq5mliaf03nj25ib0lm841cgjw5mbg-empty.json\"\n</pre>"},{"location":"reference/stream-layered-image/#dockertoolsstreamlayeredimagefakerootcommands","title":"dockerTools.streamLayeredImage.fakeRootCommands","text":"<p>Optional bash script to run inside fakeroot environment. Could be used for changing ownership of files in customisation layer.</p> type strings concatenated with \"\\n\"  source cognix/modules/stream-layered-image default <pre>\"\"\n</pre>"},{"location":"reference/stream-layered-image/#dockertoolsstreamlayeredimagefromimage","title":"dockerTools.streamLayeredImage.fromImage","text":"<p>Parent image, to append to.</p> type null or string  source cognix/modules/stream-layered-image default <pre>null\n</pre>"},{"location":"reference/stream-layered-image/#dockertoolsstreamlayeredimageincludenixdb","title":"dockerTools.streamLayeredImage.includeNixDB","text":"<p>Whether to generate a Nix DB. The DB won't be merged between multiple stages.</p> type boolean  source cognix/modules/stream-layered-image default <pre>false\n</pre>"},{"location":"reference/stream-layered-image/#dockertoolsstreamlayeredimageincludestorepaths","title":"dockerTools.streamLayeredImage.includeStorePaths","text":"<p>Whether to include store paths in the image. You generally want to leave this on, but tooling may disable this to insert the store paths more efficiently via other means, such as bind mounting the host store.</p> type boolean  source cognix/modules/stream-layered-image default <pre>true\n</pre>"},{"location":"reference/stream-layered-image/#dockertoolsstreamlayeredimagemaxlayers","title":"dockerTools.streamLayeredImage.maxLayers","text":"<p>We pick 100 to ensure there is plenty of room for extension. I believe the actual maximum is 128.</p> type signed integer  source cognix/modules/stream-layered-image default <pre>100\n</pre>"},{"location":"reference/stream-layered-image/#dockertoolsstreamlayeredimagepassthru","title":"dockerTools.streamLayeredImage.passthru","text":"<p>Passthru arguments for the underlying derivation.</p> type attribute set of anything  source cognix/modules/stream-layered-image default <pre>{ }\n</pre>"},{"location":"reference/stream-layered-image/#dockertoolsstreamlayeredimagestreamscript","title":"dockerTools.streamLayeredImage.streamScript","text":"<p>Path to streaming script</p> type path  source cognix/modules/stream-layered-image default <pre>&lt;derivation stream&gt;\n</pre>"},{"location":"reference/stream-layered-image/#dockertoolsstreamlayeredimagetag","title":"dockerTools.streamLayeredImage.tag","text":"<p>Image tag, the Nix's output hash will be used if null</p> type null or string  source cognix/modules/stream-layered-image default <pre>null\n</pre>"},{"location":"reference/weights/","title":"weights","text":"state: released maintainers: @YorickvP"},{"location":"reference/weights/#introduction","title":"Introduction","text":"<p>This module facilitates getting weights (mainly from huggingface) into your cog image. It can do this in two different ways: 1. Embedding into the image. This is suitable for small weights. 2. Loaded from replicate.delivery using pget. Your script should call the <code>download-weights</code> binary to do this during <code>setup</code>.</p> <p>To use this, add a section to your <code>cog.yaml</code>:</p> <pre><code>weights:\n  - src: thenlper/gte-large\n    download_include: [\"model.safetensors\"]\n</code></pre> <p>Then, run <code>cognix lock</code> to write the weight information into the <code>lock.json</code> file. Call <code>cognix push</code> to push the weights to replicate.delivery.</p>"},{"location":"reference/weights/#options","title":"Options","text":""},{"location":"reference/weights/#cog","title":"cog","text":""},{"location":"reference/weights/#cogweights","title":"cog.weights","text":"type list of (submodule)  source cognix/modules/weights/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/weights/#_1","title":"*","text":""},{"location":"reference/weights/#cogweightsbuild_include","title":"cog.weights.*.build_include","text":"<p>List of file globs to download at image build time</p> type list of string  source cognix/modules/weights/interface.nix default <pre>[ ]\n</pre> example <pre>[\n  \"model.safetensors\"\n]\n</pre>"},{"location":"reference/weights/#cogweightsdownload_include","title":"cog.weights.*.download_include","text":"<p>List of file globs to download at image run time</p> type list of string  source cognix/modules/weights/interface.nix default <pre>[ ]\n</pre>"},{"location":"reference/weights/#cogweightsref","title":"cog.weights.*.ref","text":"<p>branch name to fetch</p> type null or string  source cognix/modules/weights/interface.nix default <pre>null\n</pre>"},{"location":"reference/weights/#cogweightsrev","title":"cog.weights.*.rev","text":"<p>git revision to use</p> type null or string  source cognix/modules/weights/interface.nix default <pre>null\n</pre>"},{"location":"reference/weights/#cogweightssrc","title":"cog.weights.*.src","text":"type string  source cognix/modules/weights/interface.nix example <pre>\"thenlper/gte-small\"\n</pre>"}]}